import type { SchedulingType } from '../../prisma-client';
import type { ErrorOption, FieldPath } from "react-hook-form";
import type { BookingCreateBody } from '../../prisma/zod-utils';
import type { RouterOutputs } from '../../trpc/react';
import type { AppsStatus } from "@calcom/types/Calendar";
export type PublicEvent = NonNullable<RouterOutputs["viewer"]["public"]["event"]>;
export type ValidationErrors<T extends object> = {
    key: FieldPath<T>;
    error: ErrorOption;
}[];
export type EventPrice = {
    currency: string;
    price: number;
    displayAlternateSymbol?: boolean;
};
export declare enum EventDetailBlocks {
    DURATION = 0,
    LOCATION = 1,
    REQUIRES_CONFIRMATION = 2,
    OCCURENCES = 3,
    PRICE = 4
}
export type { BookingCreateBody };
export type RecurringBookingCreateBody = BookingCreateBody & {
    noEmail?: boolean;
    recurringCount?: number;
    appsStatus?: AppsStatus[] | undefined;
    allRecurringDates?: Record<string, string>[];
    currentRecurringIndex?: number;
    schedulingType?: SchedulingType;
};
export type BookingResponse = Awaited<ReturnType<typeof import('./lib/handleNewBooking').default>>;
export type InstantBookingResponse = Awaited<ReturnType<typeof import('../instant-meeting/handleInstantMeeting').default>>;
//# sourceMappingURL=types.d.ts.map