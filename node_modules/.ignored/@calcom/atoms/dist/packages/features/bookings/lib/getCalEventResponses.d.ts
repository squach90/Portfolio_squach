import type { EventType, Prisma } from '../../../prisma-client';
import type z from "zod";
import type { bookingResponsesDbSchema } from './getBookingResponsesSchema';
import { eventTypeBookingFields } from '../../../prisma/zod-utils';
export declare const getCalEventResponses: ({ bookingFields, booking, responses, }: {
    bookingFields: z.infer<typeof eventTypeBookingFields> | EventType["bookingFields"] | null;
    booking?: Prisma.BookingGetPayload<{
        select: {
            description: true;
            customInputs: true;
            attendees: {
                select: {
                    email: true;
                    name: true;
                };
            };
            location: true;
            responses: true;
        };
    }>;
    responses?: z.infer<typeof bookingResponsesDbSchema>;
}) => {
    userFieldsResponses: import("@calcom/types/Calendar").CalEventResponses;
    responses: import("@calcom/types/Calendar").CalEventResponses;
};
//# sourceMappingURL=getCalEventResponses.d.ts.map