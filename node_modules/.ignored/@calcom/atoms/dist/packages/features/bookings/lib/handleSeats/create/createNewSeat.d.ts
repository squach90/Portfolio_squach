import type { SeatedBooking, NewSeatedBookingObject } from "../types";
declare const createNewSeat: (rescheduleSeatedBookingObject: NewSeatedBookingObject, seatedBooking: SeatedBooking) => Promise<Partial<{
    payment: {
        data: import('../../../../../prisma-client').Prisma.JsonValue;
        refunded: boolean;
        success: boolean;
        currency: string;
        id: number;
        uid: string;
        externalId: string;
        paymentOption: import('../../../../../prisma-client').$Enums.PaymentOption | null;
        bookingId: number;
        appId: string | null;
        amount: number;
        fee: number;
    }[];
    attendees: {
        email: string;
        name: string;
        id: number;
        timeZone: string;
        bookingId: number | null;
        locale: string | null;
    }[];
    user: {
        username: string | null;
        email: string;
        name: string | null;
        timeZone: string;
    } | null;
    references: {
        type: string;
        id: number;
        uid: string;
        credentialId: number | null;
        deleted: boolean | null;
        bookingId: number | null;
        thirdPartyRecurringEventId: string | null;
        meetingId: string | null;
        meetingPassword: string | null;
        meetingUrl: string | null;
        externalCalendarId: string | null;
    }[];
} & {
    paid: boolean;
    location: string | null;
    title: string;
    description: string | null;
    status: import('../../../../../prisma-client').$Enums.BookingStatus;
    rescheduled: boolean | null;
    rating: number | null;
    id: number;
    startTime: Date;
    endTime: Date;
    eventTypeId: number | null;
    uid: string;
    userId: number | null;
    cancellationReason: string | null;
    metadata: import('../../../../../prisma-client').Prisma.JsonValue;
    customInputs: import('../../../../../prisma-client').Prisma.JsonValue;
    smsReminderNumber: string | null;
    recurringEventId: string | null;
    iCalUID: string | null;
    responses: import('../../../../../prisma-client').Prisma.JsonValue;
    createdAt: Date;
    updatedAt: Date | null;
    idempotencyKey: string | null;
    userPrimaryEmail: string | null;
    destinationCalendarId: number | null;
    rejectionReason: string | null;
    dynamicEventSlugRef: string | null;
    dynamicGroupSlugRef: string | null;
    fromReschedule: string | null;
    scheduledJobs: string[];
    isRecorded: boolean;
    iCalSequence: number;
    ratingFeedback: string | null;
    noShowHost: boolean | null;
}> & {
    appsStatus?: import('../../../../../platform/libraries/index.ts').AppsStatus[] | undefined;
    seatReferenceUid?: string | undefined;
    paymentUid?: string | undefined;
    message?: string | undefined;
    paymentId?: number | undefined;
}>;
export default createNewSeat;
//# sourceMappingURL=createNewSeat.d.ts.map