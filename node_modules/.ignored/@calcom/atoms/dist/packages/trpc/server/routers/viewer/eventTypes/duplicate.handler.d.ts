import { Prisma } from '../../../../../prisma-client';
import type { TrpcSessionUser } from "../../../trpc";
import type { TDuplicateInputSchema } from "./duplicate.schema";
type DuplicateOptions = {
    ctx: {
        user: NonNullable<TrpcSessionUser>;
    };
    input: TDuplicateInputSchema;
};
export declare const duplicateHandler: ({ ctx, input }: DuplicateOptions) => Promise<{
    eventType: {
        price: number;
        title: string;
        description: string | null;
        hidden: boolean;
        length: number;
        currency: string;
        id: number;
        timeZone: string | null;
        userId: number | null;
        metadata: Prisma.JsonValue;
        position: number;
        slug: string;
        locations: Prisma.JsonValue;
        offsetStart: number;
        profileId: number | null;
        teamId: number | null;
        eventName: string | null;
        parentId: number | null;
        bookingFields: Prisma.JsonValue;
        periodType: import('../../../../../prisma-client').$Enums.PeriodType;
        periodStartDate: Date | null;
        periodEndDate: Date | null;
        periodDays: number | null;
        periodCountCalendarDays: boolean | null;
        lockTimeZoneToggleOnBookingPage: boolean;
        requiresConfirmation: boolean;
        requiresBookerEmailVerification: boolean;
        recurringEvent: Prisma.JsonValue;
        disableGuests: boolean;
        hideCalendarNotes: boolean;
        minimumBookingNotice: number;
        beforeEventBuffer: number;
        afterEventBuffer: number;
        seatsPerTimeSlot: number | null;
        onlyShowFirstAvailableSlot: boolean;
        seatsShowAttendees: boolean | null;
        seatsShowAvailabilityCount: boolean | null;
        schedulingType: import('../../../../../prisma-client').$Enums.SchedulingType | null;
        scheduleId: number | null;
        slotInterval: number | null;
        successRedirectUrl: string | null;
        forwardParamsSuccessRedirect: boolean | null;
        bookingLimits: Prisma.JsonValue;
        durationLimits: Prisma.JsonValue;
        isInstantEvent: boolean;
        assignAllTeamMembers: boolean;
        useEventTypeDestinationCalendarEmail: boolean;
        secondaryEmailId: number | null;
    };
}>;
export {};
//# sourceMappingURL=duplicate.handler.d.ts.map