import { z } from "zod";
export declare const ZUpdateUserInputSchema: z.ZodObject<{
    userId: z.ZodNumber;
    username: z.ZodOptional<z.ZodString>;
    bio: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
    avatar: z.ZodOptional<z.ZodString>;
    role: z.ZodEnum<["ADMIN", "MEMBER", "OWNER"]>;
    timeZone: z.ZodString;
}, "strip", z.ZodTypeAny, {
    role: "ADMIN" | "MEMBER" | "OWNER";
    timeZone: string;
    userId: number;
    username?: string | undefined;
    bio?: string | undefined;
    name?: string | undefined;
    email?: string | undefined;
    avatar?: string | undefined;
}, {
    role: "ADMIN" | "MEMBER" | "OWNER";
    timeZone: string;
    userId: number;
    username?: string | undefined;
    bio?: string | undefined;
    name?: string | undefined;
    email?: string | undefined;
    avatar?: string | undefined;
}>;
export type TUpdateUserInputSchema = z.infer<typeof ZUpdateUserInputSchema>;
//# sourceMappingURL=updateUser.schema.d.ts.map