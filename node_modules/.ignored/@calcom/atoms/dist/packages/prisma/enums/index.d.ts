export declare const SchedulingType: {
    readonly ROUND_ROBIN: "ROUND_ROBIN";
    readonly COLLECTIVE: "COLLECTIVE";
    readonly MANAGED: "MANAGED";
};
export type SchedulingType = (typeof SchedulingType)[keyof typeof SchedulingType];
export declare const PeriodType: {
    readonly UNLIMITED: "UNLIMITED";
    readonly ROLLING: "ROLLING";
    readonly ROLLING_WINDOW: "ROLLING_WINDOW";
    readonly RANGE: "RANGE";
};
export type PeriodType = (typeof PeriodType)[keyof typeof PeriodType];
export declare const IdentityProvider: {
    readonly CAL: "CAL";
    readonly GOOGLE: "GOOGLE";
    readonly SAML: "SAML";
};
export type IdentityProvider = (typeof IdentityProvider)[keyof typeof IdentityProvider];
export declare const UserPermissionRole: {
    readonly USER: "USER";
    readonly ADMIN: "ADMIN";
};
export type UserPermissionRole = (typeof UserPermissionRole)[keyof typeof UserPermissionRole];
export declare const MembershipRole: {
    readonly MEMBER: "MEMBER";
    readonly ADMIN: "ADMIN";
    readonly OWNER: "OWNER";
};
export type MembershipRole = (typeof MembershipRole)[keyof typeof MembershipRole];
export declare const BookingStatus: {
    readonly CANCELLED: "CANCELLED";
    readonly ACCEPTED: "ACCEPTED";
    readonly REJECTED: "REJECTED";
    readonly PENDING: "PENDING";
    readonly AWAITING_HOST: "AWAITING_HOST";
};
export type BookingStatus = (typeof BookingStatus)[keyof typeof BookingStatus];
export declare const EventTypeCustomInputType: {
    readonly TEXT: "TEXT";
    readonly TEXTLONG: "TEXTLONG";
    readonly NUMBER: "NUMBER";
    readonly BOOL: "BOOL";
    readonly RADIO: "RADIO";
    readonly PHONE: "PHONE";
};
export type EventTypeCustomInputType = (typeof EventTypeCustomInputType)[keyof typeof EventTypeCustomInputType];
export declare const ReminderType: {
    readonly PENDING_BOOKING_CONFIRMATION: "PENDING_BOOKING_CONFIRMATION";
};
export type ReminderType = (typeof ReminderType)[keyof typeof ReminderType];
export declare const PaymentOption: {
    readonly ON_BOOKING: "ON_BOOKING";
    readonly HOLD: "HOLD";
};
export type PaymentOption = (typeof PaymentOption)[keyof typeof PaymentOption];
export declare const WebhookTriggerEvents: {
    readonly BOOKING_CREATED: "BOOKING_CREATED";
    readonly BOOKING_PAYMENT_INITIATED: "BOOKING_PAYMENT_INITIATED";
    readonly BOOKING_PAID: "BOOKING_PAID";
    readonly BOOKING_RESCHEDULED: "BOOKING_RESCHEDULED";
    readonly BOOKING_REQUESTED: "BOOKING_REQUESTED";
    readonly BOOKING_CANCELLED: "BOOKING_CANCELLED";
    readonly BOOKING_REJECTED: "BOOKING_REJECTED";
    readonly FORM_SUBMITTED: "FORM_SUBMITTED";
    readonly MEETING_ENDED: "MEETING_ENDED";
    readonly MEETING_STARTED: "MEETING_STARTED";
    readonly RECORDING_READY: "RECORDING_READY";
    readonly INSTANT_MEETING: "INSTANT_MEETING";
};
export type WebhookTriggerEvents = (typeof WebhookTriggerEvents)[keyof typeof WebhookTriggerEvents];
export declare const AppCategories: {
    readonly calendar: "calendar";
    readonly messaging: "messaging";
    readonly other: "other";
    readonly payment: "payment";
    readonly video: "video";
    readonly web3: "web3";
    readonly automation: "automation";
    readonly analytics: "analytics";
    readonly conferencing: "conferencing";
    readonly crm: "crm";
};
export type AppCategories = (typeof AppCategories)[keyof typeof AppCategories];
export declare const WorkflowTriggerEvents: {
    readonly BEFORE_EVENT: "BEFORE_EVENT";
    readonly EVENT_CANCELLED: "EVENT_CANCELLED";
    readonly NEW_EVENT: "NEW_EVENT";
    readonly AFTER_EVENT: "AFTER_EVENT";
    readonly RESCHEDULE_EVENT: "RESCHEDULE_EVENT";
};
export type WorkflowTriggerEvents = (typeof WorkflowTriggerEvents)[keyof typeof WorkflowTriggerEvents];
export declare const WorkflowActions: {
    readonly EMAIL_HOST: "EMAIL_HOST";
    readonly EMAIL_ATTENDEE: "EMAIL_ATTENDEE";
    readonly SMS_ATTENDEE: "SMS_ATTENDEE";
    readonly SMS_NUMBER: "SMS_NUMBER";
    readonly EMAIL_ADDRESS: "EMAIL_ADDRESS";
    readonly WHATSAPP_ATTENDEE: "WHATSAPP_ATTENDEE";
    readonly WHATSAPP_NUMBER: "WHATSAPP_NUMBER";
};
export type WorkflowActions = (typeof WorkflowActions)[keyof typeof WorkflowActions];
export declare const TimeUnit: {
    readonly DAY: "DAY";
    readonly HOUR: "HOUR";
    readonly MINUTE: "MINUTE";
};
export type TimeUnit = (typeof TimeUnit)[keyof typeof TimeUnit];
export declare const WorkflowTemplates: {
    readonly REMINDER: "REMINDER";
    readonly CUSTOM: "CUSTOM";
    readonly CANCELLED: "CANCELLED";
    readonly RESCHEDULED: "RESCHEDULED";
    readonly COMPLETED: "COMPLETED";
    readonly RATING: "RATING";
};
export type WorkflowTemplates = (typeof WorkflowTemplates)[keyof typeof WorkflowTemplates];
export declare const WorkflowMethods: {
    readonly EMAIL: "EMAIL";
    readonly SMS: "SMS";
    readonly WHATSAPP: "WHATSAPP";
};
export type WorkflowMethods = (typeof WorkflowMethods)[keyof typeof WorkflowMethods];
export declare const FeatureType: {
    readonly RELEASE: "RELEASE";
    readonly EXPERIMENT: "EXPERIMENT";
    readonly OPERATIONAL: "OPERATIONAL";
    readonly KILL_SWITCH: "KILL_SWITCH";
    readonly PERMISSION: "PERMISSION";
};
export type FeatureType = (typeof FeatureType)[keyof typeof FeatureType];
export declare const AccessScope: {
    readonly READ_BOOKING: "READ_BOOKING";
    readonly READ_PROFILE: "READ_PROFILE";
};
export type AccessScope = (typeof AccessScope)[keyof typeof AccessScope];
export declare const RedirectType: {
    readonly UserEventType: "UserEventType";
    readonly TeamEventType: "TeamEventType";
    readonly User: "User";
    readonly Team: "Team";
};
export type RedirectType = (typeof RedirectType)[keyof typeof RedirectType];
export declare const SMSLockState: {
    readonly LOCKED: "LOCKED";
    readonly UNLOCKED: "UNLOCKED";
    readonly REVIEW_NEEDED: "REVIEW_NEEDED";
};
export type SMSLockState = (typeof SMSLockState)[keyof typeof SMSLockState];
//# sourceMappingURL=index.d.ts.map