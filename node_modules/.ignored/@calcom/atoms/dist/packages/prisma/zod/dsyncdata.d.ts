import * as z from "zod";
import { CompleteOrganizationSettings, CompleteDSyncTeamGroupMapping } from "./index";
export declare const _DSyncDataModel: z.ZodObject<{
    id: z.ZodNumber;
    directoryId: z.ZodString;
    tenant: z.ZodString;
    organizationId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    id: number;
    directoryId: string;
    tenant: string;
    organizationId?: number | null | undefined;
}, {
    id: number;
    directoryId: string;
    tenant: string;
    organizationId?: number | null | undefined;
}>;
export interface CompleteDSyncData extends z.infer<typeof _DSyncDataModel> {
    org?: CompleteOrganizationSettings | null;
    teamGroupMapping: CompleteDSyncTeamGroupMapping[];
}
/**
 * DSyncDataModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const DSyncDataModel: z.ZodSchema<CompleteDSyncData>;
//# sourceMappingURL=dsyncdata.d.ts.map