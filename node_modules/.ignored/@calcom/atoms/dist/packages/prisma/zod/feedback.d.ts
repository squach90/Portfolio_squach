import * as z from "zod";
import { CompleteUser } from "./index";
export declare const _FeedbackModel: z.ZodObject<{
    id: z.ZodNumber;
    date: z.ZodDate;
    userId: z.ZodNumber;
    rating: z.ZodString;
    comment: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    rating: string;
    date: Date;
    id: number;
    userId: number;
    comment?: string | null | undefined;
}, {
    rating: string;
    date: Date;
    id: number;
    userId: number;
    comment?: string | null | undefined;
}>;
export interface CompleteFeedback extends z.infer<typeof _FeedbackModel> {
    user: CompleteUser;
}
/**
 * FeedbackModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const FeedbackModel: z.ZodSchema<CompleteFeedback>;
//# sourceMappingURL=feedback.d.ts.map