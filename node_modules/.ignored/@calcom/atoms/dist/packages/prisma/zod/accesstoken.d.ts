import * as z from "zod";
import { CompleteUser, CompletePlatformOAuthClient } from "./index";
export declare const _AccessTokenModel: z.ZodObject<{
    id: z.ZodNumber;
    secret: z.ZodString;
    createdAt: z.ZodDate;
    expiresAt: z.ZodDate;
    platformOAuthClientId: z.ZodString;
    userId: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    secret: string;
    id: number;
    userId: number;
    createdAt: Date;
    expiresAt: Date;
    platformOAuthClientId: string;
}, {
    secret: string;
    id: number;
    userId: number;
    createdAt: Date;
    expiresAt: Date;
    platformOAuthClientId: string;
}>;
export interface CompleteAccessToken extends z.infer<typeof _AccessTokenModel> {
    owner: CompleteUser;
    client: CompletePlatformOAuthClient;
}
/**
 * AccessTokenModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const AccessTokenModel: z.ZodSchema<CompleteAccessToken>;
//# sourceMappingURL=accesstoken.d.ts.map