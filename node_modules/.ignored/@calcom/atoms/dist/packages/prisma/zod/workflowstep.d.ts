import * as z from "zod";
import { CompleteWorkflow, CompleteWorkflowReminder } from "./index";
export declare const _WorkflowStepModel: z.ZodObject<{
    id: z.ZodNumber;
    stepNumber: z.ZodNumber;
    action: z.ZodNativeEnum<{
        EMAIL_HOST: "EMAIL_HOST";
        EMAIL_ATTENDEE: "EMAIL_ATTENDEE";
        SMS_ATTENDEE: "SMS_ATTENDEE";
        SMS_NUMBER: "SMS_NUMBER";
        EMAIL_ADDRESS: "EMAIL_ADDRESS";
        WHATSAPP_ATTENDEE: "WHATSAPP_ATTENDEE";
        WHATSAPP_NUMBER: "WHATSAPP_NUMBER";
    }>;
    workflowId: z.ZodNumber;
    sendTo: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    reminderBody: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    emailSubject: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    template: z.ZodNativeEnum<{
        REMINDER: "REMINDER";
        CUSTOM: "CUSTOM";
        CANCELLED: "CANCELLED";
        RESCHEDULED: "RESCHEDULED";
        COMPLETED: "COMPLETED";
        RATING: "RATING";
    }>;
    numberRequired: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    sender: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    numberVerificationPending: z.ZodBoolean;
    includeCalendarEvent: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    action: "EMAIL_HOST" | "EMAIL_ATTENDEE" | "SMS_ATTENDEE" | "SMS_NUMBER" | "EMAIL_ADDRESS" | "WHATSAPP_ATTENDEE" | "WHATSAPP_NUMBER";
    id: number;
    template: "CANCELLED" | "REMINDER" | "CUSTOM" | "RESCHEDULED" | "COMPLETED" | "RATING";
    stepNumber: number;
    workflowId: number;
    numberVerificationPending: boolean;
    includeCalendarEvent: boolean;
    sendTo?: string | null | undefined;
    reminderBody?: string | null | undefined;
    emailSubject?: string | null | undefined;
    numberRequired?: boolean | null | undefined;
    sender?: string | null | undefined;
}, {
    action: "EMAIL_HOST" | "EMAIL_ATTENDEE" | "SMS_ATTENDEE" | "SMS_NUMBER" | "EMAIL_ADDRESS" | "WHATSAPP_ATTENDEE" | "WHATSAPP_NUMBER";
    id: number;
    template: "CANCELLED" | "REMINDER" | "CUSTOM" | "RESCHEDULED" | "COMPLETED" | "RATING";
    stepNumber: number;
    workflowId: number;
    numberVerificationPending: boolean;
    includeCalendarEvent: boolean;
    sendTo?: string | null | undefined;
    reminderBody?: string | null | undefined;
    emailSubject?: string | null | undefined;
    numberRequired?: boolean | null | undefined;
    sender?: string | null | undefined;
}>;
export interface CompleteWorkflowStep extends z.infer<typeof _WorkflowStepModel> {
    workflow: CompleteWorkflow;
    workflowReminders: CompleteWorkflowReminder[];
}
/**
 * WorkflowStepModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const WorkflowStepModel: z.ZodSchema<CompleteWorkflowStep>;
//# sourceMappingURL=workflowstep.d.ts.map