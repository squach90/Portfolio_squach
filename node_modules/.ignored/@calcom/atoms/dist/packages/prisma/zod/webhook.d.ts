import * as z from "zod";
import { CompleteUser, CompleteTeam, CompleteEventType, CompleteApp, CompleteWebhookScheduledTriggers } from "./index";
export declare const _WebhookModel: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    teamId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    eventTypeId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    subscriberUrl: z.ZodString;
    payloadTemplate: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodDate;
    active: z.ZodBoolean;
    eventTriggers: z.ZodArray<z.ZodNativeEnum<{
        BOOKING_CREATED: "BOOKING_CREATED";
        BOOKING_PAYMENT_INITIATED: "BOOKING_PAYMENT_INITIATED";
        BOOKING_PAID: "BOOKING_PAID";
        BOOKING_RESCHEDULED: "BOOKING_RESCHEDULED";
        BOOKING_REQUESTED: "BOOKING_REQUESTED";
        BOOKING_CANCELLED: "BOOKING_CANCELLED";
        BOOKING_REJECTED: "BOOKING_REJECTED";
        FORM_SUBMITTED: "FORM_SUBMITTED";
        MEETING_ENDED: "MEETING_ENDED";
        MEETING_STARTED: "MEETING_STARTED";
        RECORDING_READY: "RECORDING_READY";
        INSTANT_MEETING: "INSTANT_MEETING";
    }>, "many">;
    appId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    secret: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    platform: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    active: boolean;
    id: string;
    createdAt: Date;
    subscriberUrl: string;
    eventTriggers: ("BOOKING_CREATED" | "BOOKING_PAYMENT_INITIATED" | "BOOKING_PAID" | "BOOKING_RESCHEDULED" | "BOOKING_REQUESTED" | "BOOKING_CANCELLED" | "BOOKING_REJECTED" | "FORM_SUBMITTED" | "MEETING_ENDED" | "MEETING_STARTED" | "RECORDING_READY" | "INSTANT_MEETING")[];
    platform: boolean;
    userId?: number | null | undefined;
    teamId?: number | null | undefined;
    eventTypeId?: number | null | undefined;
    payloadTemplate?: string | null | undefined;
    appId?: string | null | undefined;
    secret?: string | null | undefined;
}, {
    active: boolean;
    id: string;
    createdAt: Date;
    subscriberUrl: string;
    eventTriggers: ("BOOKING_CREATED" | "BOOKING_PAYMENT_INITIATED" | "BOOKING_PAID" | "BOOKING_RESCHEDULED" | "BOOKING_REQUESTED" | "BOOKING_CANCELLED" | "BOOKING_REJECTED" | "FORM_SUBMITTED" | "MEETING_ENDED" | "MEETING_STARTED" | "RECORDING_READY" | "INSTANT_MEETING")[];
    platform: boolean;
    userId?: number | null | undefined;
    teamId?: number | null | undefined;
    eventTypeId?: number | null | undefined;
    payloadTemplate?: string | null | undefined;
    appId?: string | null | undefined;
    secret?: string | null | undefined;
}>;
export interface CompleteWebhook extends z.infer<typeof _WebhookModel> {
    user?: CompleteUser | null;
    team?: CompleteTeam | null;
    eventType?: CompleteEventType | null;
    app?: CompleteApp | null;
    scheduledTriggers: CompleteWebhookScheduledTriggers[];
}
/**
 * WebhookModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const WebhookModel: z.ZodSchema<CompleteWebhook>;
//# sourceMappingURL=webhook.d.ts.map