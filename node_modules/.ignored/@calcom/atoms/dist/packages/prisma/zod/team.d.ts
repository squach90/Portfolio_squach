import * as z from "zod";
import { CompleteMembership, CompleteEventType, CompleteWorkflow, CompleteVerifiedNumber, CompleteVerifiedEmail, CompleteUser, CompleteVerificationToken, CompleteWebhook, CompleteApp_RoutingForms_Form, CompleteApiKey, CompleteCredential, CompleteAccessCode, CompleteOrganizationSettings, CompleteInstantMeetingToken, CompleteProfile, CompleteDSyncTeamGroupMapping, CompletePlatformOAuthClient, CompletePlatformBilling } from "./index";
export declare const _TeamModel: z.ZodObject<{
    id: z.ZodNumber;
    name: z.ZodString;
    slug: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    logo: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    logoUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    calVideoLogo: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    appLogo: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    appIconLogo: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    hideBranding: z.ZodBoolean;
    isPrivate: z.ZodBoolean;
    hideBookATeamMember: z.ZodBoolean;
    createdAt: z.ZodDate;
    metadata: z.ZodNullable<z.ZodObject<{
        requestedSlug: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNull]>>;
        paymentId: z.ZodOptional<z.ZodString>;
        subscriptionId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        subscriptionItemId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        orgSeats: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        orgPricePerSeat: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        migratedToOrgFrom: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            teamSlug: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNull]>>;
            lastMigrationTime: z.ZodOptional<z.ZodString>;
            reverted: z.ZodOptional<z.ZodBoolean>;
            lastRevertTime: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            teamSlug?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            lastRevertTime?: string | undefined;
        }, {
            teamSlug?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            lastRevertTime?: string | undefined;
        }>>>;
    }, "strip", z.ZodTypeAny, {
        requestedSlug?: string | null | undefined;
        paymentId?: string | undefined;
        subscriptionId?: string | null | undefined;
        subscriptionItemId?: string | null | undefined;
        orgSeats?: number | null | undefined;
        orgPricePerSeat?: number | null | undefined;
        migratedToOrgFrom?: {
            teamSlug?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            lastRevertTime?: string | undefined;
        } | undefined;
    }, {
        requestedSlug?: string | null | undefined;
        paymentId?: string | undefined;
        subscriptionId?: string | null | undefined;
        subscriptionItemId?: string | null | undefined;
        orgSeats?: number | null | undefined;
        orgPricePerSeat?: number | null | undefined;
        migratedToOrgFrom?: {
            teamSlug?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            lastRevertTime?: string | undefined;
        } | undefined;
    }>>;
    theme: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    brandColor: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    darkBrandColor: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    bannerUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    parentId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    timeFormat: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    timeZone: z.ZodString;
    weekStart: z.ZodString;
    isOrganization: z.ZodBoolean;
    pendingPayment: z.ZodBoolean;
    isPlatform: z.ZodBoolean;
    smsLockState: z.ZodNativeEnum<{
        LOCKED: "LOCKED";
        UNLOCKED: "UNLOCKED";
        REVIEW_NEEDED: "REVIEW_NEEDED";
    }>;
}, "strip", z.ZodTypeAny, {
    name: string;
    id: number;
    weekStart: string;
    timeZone: string;
    metadata: {
        requestedSlug?: string | null | undefined;
        paymentId?: string | undefined;
        subscriptionId?: string | null | undefined;
        subscriptionItemId?: string | null | undefined;
        orgSeats?: number | null | undefined;
        orgPricePerSeat?: number | null | undefined;
        migratedToOrgFrom?: {
            teamSlug?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            lastRevertTime?: string | undefined;
        } | undefined;
    } | null;
    hideBranding: boolean;
    smsLockState: "LOCKED" | "UNLOCKED" | "REVIEW_NEEDED";
    createdAt: Date;
    isPrivate: boolean;
    hideBookATeamMember: boolean;
    isOrganization: boolean;
    pendingPayment: boolean;
    isPlatform: boolean;
    slug?: string | null | undefined;
    logo?: string | null | undefined;
    logoUrl?: string | null | undefined;
    calVideoLogo?: string | null | undefined;
    appLogo?: string | null | undefined;
    appIconLogo?: string | null | undefined;
    bio?: string | null | undefined;
    theme?: string | null | undefined;
    brandColor?: string | null | undefined;
    darkBrandColor?: string | null | undefined;
    bannerUrl?: string | null | undefined;
    parentId?: number | null | undefined;
    timeFormat?: number | null | undefined;
}, {
    name: string;
    id: number;
    weekStart: string;
    timeZone: string;
    metadata: {
        requestedSlug?: string | null | undefined;
        paymentId?: string | undefined;
        subscriptionId?: string | null | undefined;
        subscriptionItemId?: string | null | undefined;
        orgSeats?: number | null | undefined;
        orgPricePerSeat?: number | null | undefined;
        migratedToOrgFrom?: {
            teamSlug?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            lastRevertTime?: string | undefined;
        } | undefined;
    } | null;
    hideBranding: boolean;
    smsLockState: "LOCKED" | "UNLOCKED" | "REVIEW_NEEDED";
    createdAt: Date;
    isPrivate: boolean;
    hideBookATeamMember: boolean;
    isOrganization: boolean;
    pendingPayment: boolean;
    isPlatform: boolean;
    slug?: string | null | undefined;
    logo?: string | null | undefined;
    logoUrl?: string | null | undefined;
    calVideoLogo?: string | null | undefined;
    appLogo?: string | null | undefined;
    appIconLogo?: string | null | undefined;
    bio?: string | null | undefined;
    theme?: string | null | undefined;
    brandColor?: string | null | undefined;
    darkBrandColor?: string | null | undefined;
    bannerUrl?: string | null | undefined;
    parentId?: number | null | undefined;
    timeFormat?: number | null | undefined;
}>;
export interface CompleteTeam extends z.infer<typeof _TeamModel> {
    members: CompleteMembership[];
    eventTypes: CompleteEventType[];
    workflows: CompleteWorkflow[];
    verifiedNumbers: CompleteVerifiedNumber[];
    verifiedEmails: CompleteVerifiedEmail[];
    parent?: CompleteTeam | null;
    children: CompleteTeam[];
    orgUsers: CompleteUser[];
    inviteTokens: CompleteVerificationToken[];
    webhooks: CompleteWebhook[];
    routingForms: CompleteApp_RoutingForms_Form[];
    apiKeys: CompleteApiKey[];
    credentials: CompleteCredential[];
    accessCodes: CompleteAccessCode[];
    organizationSettings?: CompleteOrganizationSettings | null;
    instantMeetingTokens: CompleteInstantMeetingToken[];
    orgProfiles: CompleteProfile[];
    dsyncTeamGroupMapping: CompleteDSyncTeamGroupMapping[];
    platformOAuthClient: CompletePlatformOAuthClient[];
    platformBilling?: CompletePlatformBilling | null;
}
/**
 * TeamModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const TeamModel: z.ZodSchema<CompleteTeam>;
//# sourceMappingURL=team.d.ts.map