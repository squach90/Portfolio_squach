import type { AppCategories, Prisma } from '../../prisma-client';
import type { EventTypeAppsList } from '../../app-store/utils';
import type { CompleteEventType } from '../../prisma/zod';
import type { CalendarEvent } from "@calcom/types/Calendar";
declare const handlePayment: (evt: CalendarEvent, selectedEventType: Pick<CompleteEventType, "metadata" | "title">, paymentAppCredentials: {
    key: Prisma.JsonValue;
    appId: EventTypeAppsList;
    app: {
        dirName: string;
        categories: AppCategories[];
    } | null;
}, booking: {
    user: {
        email: string | null;
        name: string | null;
        timeZone: string;
        username: string | null;
    } | null;
    id: number;
    userId: number | null;
    startTime: {
        toISOString: () => string;
    };
    uid: string;
}, bookerName: string, bookerEmail: string) => Promise<{
    id: number;
    uid: string;
    appId: string | null;
    bookingId: number;
    amount: number;
    fee: number;
    currency: string;
    success: boolean;
    refunded: boolean;
    data: Prisma.JsonValue;
    externalId: string;
    paymentOption: import('../../prisma-client').$Enums.PaymentOption | null;
} | null>;
export { handlePayment };
//# sourceMappingURL=handlePayment.d.ts.map