import { type LimitOptions, type RatelimitResponse } from "@unkey/ratelimit";
export type RateLimitHelper = {
    rateLimitingType?: "core" | "forcedSlowMode" | "common" | "api" | "ai" | "sms" | "smsMonth";
    identifier: string;
    opts?: LimitOptions;
    /**
     * Using a callback instead of a regular return to provide headers even
     * when the rate limit is reached and an error is thrown.
     **/
    onRateLimiterResponse?: (response: RatelimitResponse) => void;
};
export declare const API_KEY_RATE_LIMIT = 30;
export declare function rateLimiter(): (() => RatelimitResponse) | (({ rateLimitingType, identifier, opts }: RateLimitHelper) => Promise<RatelimitResponse>);
//# sourceMappingURL=rateLimit.d.ts.map