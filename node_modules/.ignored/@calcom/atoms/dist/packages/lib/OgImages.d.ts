/// <reference types="react" />
declare module "react" {
    interface HTMLAttributes<T> {
        tw?: string;
    }
}
export interface MeetingImageProps {
    title: string;
    profile: {
        name: string;
        image?: string | null;
    };
    users?: {
        name: string;
        username: string;
    }[];
}
export interface AppImageProps {
    name: string;
    description: string;
    slug: string;
}
export interface GenericImageProps {
    title: string;
    description: string;
}
export interface ScreenshotImageProps {
    image: string;
    /**
     * Fallback image to use if the image prop fails to load.
     */
    fallbackImage: string;
}
/**
 * Test urls:
 * 1. 1 user http://localhost:3000/api/social/og/image?type=meeting&title=super%20long%20event%20title%20for%20testing%20purposes&meetingProfileName=Pro%20Example&meetingImage=http://localhost:3000/pro/avatar.png&names=Pro%20Example&usernames=pro
 * 2. Team event (collection), lot's of people, long title http://localhost:3000/api/social/og/image?type=meeting&title=Getting%20to%20know%20us%20and%20have%20a%20beer%20together&meetingProfileName=Seeded%20Team&names=Team%20Pro%20Example%202&names=Team%20Pro%20Example%203&names=Team%20Pro%20Example%204&names=Team%20Free%20Example&names=Team%20Pro%20Example&usernames=teampro2&usernames=teampro3&usernames=teampro4&usernames=teamfree&usernames=teampro
 * 3. Team event of 2 (collection), http://localhost:3000/api/social/og/image?type=meeting&title=Getting%20to%20know%20each%20other&meetingProfileName=Seeded%20Team&names=Team%20Pro%20Example%202&names=Team%20Pro%20Example%203&usernames=teampro2&usernames=teampro3
 * 4. Team event (round robin) http://localhost:3000/api/social/og/image?type=meeting&title=Round%20Robin%20Seeded%20Team%20Event&meetingProfileName=Seeded%20Team
 * 5. Dynamic collective (2 persons) http://localhost:3000/api/social/og/image?type=meeting&title=15min&meetingProfileName=Team%20Pro%20Example,%20Pro%20Example&names=Team%20Pro%20Example&names=Pro%20Example&usernames=teampro&usernames=pro
 */
export declare const constructMeetingImage: ({ title, users, profile }: MeetingImageProps, encodeUri?: boolean) => string;
/**
 * Test url:
 * http://localhost:3000/api/social/og/image?type=app&name=Huddle01&slug=/api/app-store/huddle01video/icon.svg&description=Huddle01%20is%20a%20new%20video%20conferencing%20software%20native%20to%20Web3%20and%20is%20comparable%20to%20a%20decentralized%20version%20of%20Zoom.%20It%20supports%20conversations%20for...
 */
export declare const constructAppImage: ({ name, slug, description }: AppImageProps, encodeUri?: boolean) => string;
export declare const constructGenericImage: ({ title, description }: GenericImageProps, encodeUri?: boolean) => string;
export declare const Meeting: ({ title, users, profile }: MeetingImageProps) => JSX.Element;
export declare const App: ({ name, description, slug }: AppImageProps) => JSX.Element;
export declare const Generic: ({ title, description }: GenericImageProps) => JSX.Element;
export declare const ScreenShot: ({ image, fallbackImage }: ScreenshotImageProps) => JSX.Element;
//# sourceMappingURL=OgImages.d.ts.map