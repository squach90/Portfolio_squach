export declare const QUERY_KEY = "get-private-events";
export declare const useEventTypesPrivate: () => import("@tanstack/react-query").UseQueryResult<{
    allUsersAcrossAllEventTypes: Map<number, {
        username: string | null;
        name: string | null;
        id: number;
        avatarUrl: string | null;
    } & {
        nonProfileUsername: string | null;
        profile: import("@calcom/types/UserProfile").UserProfile;
    }>;
    eventTypeGroups: {
        eventTypes: {
            userIds: number[];
            safeDescription: string | undefined;
            metadata: {
                smartContractAddress?: string | undefined;
                blockchainId?: number | undefined;
                multipleDuration?: number[] | undefined;
                giphyThankYouPage?: string | undefined;
                apps?: {
                    alby?: {
                        price: number;
                        currency: string;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                    } | undefined;
                    basecamp3?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    dailyvideo?: {} | undefined;
                    fathom?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    feishucalendar?: {} | undefined;
                    ga4?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    giphy?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        thankYouPage?: string | undefined;
                    } | undefined;
                    googlecalendar?: {} | undefined;
                    gtm?: {
                        trackingId: string;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    hubspot?: {} | undefined;
                    intercom?: {} | undefined;
                    jelly?: {} | undefined;
                    jitsivideo?: {} | undefined;
                    larkcalendar?: {} | undefined;
                    make?: {} | undefined;
                    matomo?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        MATOMO_URL?: string | undefined;
                        SITE_ID?: string | undefined;
                    } | undefined;
                    metapixel?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    "mock-payment-app"?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    office365calendar?: {
                        client_id: string;
                        client_secret: string;
                    } | undefined;
                    office365video?: {
                        client_id: string;
                        client_secret: string;
                    } | undefined;
                    paypal?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    "pipedrive-crm"?: {} | undefined;
                    plausible?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        PLAUSIBLE_URL?: string | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    posthog?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        TRACKING_ID?: string | undefined;
                        API_HOST?: string | undefined;
                    } | undefined;
                    qr_code?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    "routing-forms"?: any;
                    salesforce?: {} | undefined;
                    shimmervideo?: {} | undefined;
                    stripe?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    tandemvideo?: {} | undefined;
                    "booking-pages-tag"?: {
                        trackingId: string;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    "event-type-app-card"?: {
                        isSunrise: boolean;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    vital?: {} | undefined;
                    webex?: {} | undefined;
                    wordpress?: {
                        isSunrise: boolean;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    zapier?: {} | undefined;
                    "zoho-bigin"?: {} | undefined;
                    zohocalendar?: {} | undefined;
                    zohocrm?: {} | undefined;
                    zoomvideo?: {} | undefined;
                } | undefined;
                additionalNotesRequired?: boolean | undefined;
                disableSuccessPage?: boolean | undefined;
                disableStandardEmails?: {
                    confirmation?: {
                        host?: boolean | undefined;
                        attendee?: boolean | undefined;
                    } | undefined;
                } | undefined;
                managedEventConfig?: {
                    unlockedFields?: {
                        price?: true | undefined;
                        bookings?: true | undefined;
                        webhooks?: true | undefined;
                        profile?: true | undefined;
                        owner?: true | undefined;
                        title?: true | undefined;
                        description?: true | undefined;
                        hidden?: true | undefined;
                        team?: true | undefined;
                        availability?: true | undefined;
                        length?: true | undefined;
                        workflows?: true | undefined;
                        users?: true | undefined;
                        hosts?: true | undefined;
                        currency?: true | undefined;
                        children?: true | undefined;
                        schedule?: true | undefined;
                        timeZone?: true | undefined;
                        userId?: true | undefined;
                        metadata?: true | undefined;
                        position?: true | undefined;
                        parent?: true | undefined;
                        slug?: true | undefined;
                        locations?: true | undefined;
                        offsetStart?: true | undefined;
                        profileId?: true | undefined;
                        teamId?: true | undefined;
                        eventName?: true | undefined;
                        parentId?: true | undefined;
                        bookingFields?: true | undefined;
                        periodType?: true | undefined;
                        periodStartDate?: true | undefined;
                        periodEndDate?: true | undefined;
                        periodDays?: true | undefined;
                        periodCountCalendarDays?: true | undefined;
                        lockTimeZoneToggleOnBookingPage?: true | undefined;
                        requiresConfirmation?: true | undefined;
                        requiresBookerEmailVerification?: true | undefined;
                        recurringEvent?: true | undefined;
                        disableGuests?: true | undefined;
                        hideCalendarNotes?: true | undefined;
                        minimumBookingNotice?: true | undefined;
                        beforeEventBuffer?: true | undefined;
                        afterEventBuffer?: true | undefined;
                        seatsPerTimeSlot?: true | undefined;
                        onlyShowFirstAvailableSlot?: true | undefined;
                        seatsShowAttendees?: true | undefined;
                        seatsShowAvailabilityCount?: true | undefined;
                        schedulingType?: true | undefined;
                        scheduleId?: true | undefined;
                        slotInterval?: true | undefined;
                        successRedirectUrl?: true | undefined;
                        forwardParamsSuccessRedirect?: true | undefined;
                        bookingLimits?: true | undefined;
                        durationLimits?: true | undefined;
                        isInstantEvent?: true | undefined;
                        assignAllTeamMembers?: true | undefined;
                        useEventTypeDestinationCalendarEmail?: true | undefined;
                        secondaryEmailId?: true | undefined;
                        hashedLink?: true | undefined;
                        destinationCalendar?: true | undefined;
                        customInputs?: true | undefined;
                        aiPhoneCallConfig?: true | undefined;
                        secondaryEmail?: true | undefined;
                        _count?: true | undefined;
                    } | undefined;
                } | undefined;
                requiresConfirmationThreshold?: {
                    time: number;
                    unit: "months" | "years" | "days" | "hours" | "minutes" | "milliseconds" | "seconds" | "dates";
                } | undefined;
                config?: {
                    useHostSchedulesForTeamEvent?: boolean | undefined;
                } | undefined;
                bookerLayouts?: {
                    enabledLayouts: import('../../../../prisma/zod-utils').BookerLayouts[];
                    defaultLayout: import('../../../../prisma/zod-utils').BookerLayouts;
                } | null | undefined;
            } | null;
            children: {
                users: ({
                    username: string | null;
                    name: string | null;
                    id: number;
                    avatarUrl: string | null;
                } & {
                    nonProfileUsername: string | null;
                    profile: import("@calcom/types/UserProfile").UserProfile;
                })[];
                price: number;
                title: string;
                description: string | null;
                hidden: boolean;
                length: number;
                currency: string;
                id: number;
                timeZone: string | null;
                userId: number | null;
                metadata: import('../../../../prisma-client').Prisma.JsonValue;
                position: number;
                slug: string;
                locations: import('../../../../prisma-client').Prisma.JsonValue;
                offsetStart: number;
                profileId: number | null;
                teamId: number | null;
                eventName: string | null;
                parentId: number | null;
                bookingFields: import('../../../../prisma-client').Prisma.JsonValue;
                periodType: import('../../../../prisma-client').$Enums.PeriodType;
                periodStartDate: Date | null;
                periodEndDate: Date | null;
                periodDays: number | null;
                periodCountCalendarDays: boolean | null;
                lockTimeZoneToggleOnBookingPage: boolean;
                requiresConfirmation: boolean;
                requiresBookerEmailVerification: boolean;
                recurringEvent: import('../../../../prisma-client').Prisma.JsonValue;
                disableGuests: boolean;
                hideCalendarNotes: boolean;
                minimumBookingNotice: number;
                beforeEventBuffer: number;
                afterEventBuffer: number;
                seatsPerTimeSlot: number | null;
                onlyShowFirstAvailableSlot: boolean;
                seatsShowAttendees: boolean | null;
                seatsShowAvailabilityCount: boolean | null;
                schedulingType: import('../../../../prisma-client').$Enums.SchedulingType | null;
                scheduleId: number | null;
                slotInterval: number | null;
                successRedirectUrl: string | null;
                forwardParamsSuccessRedirect: boolean | null;
                bookingLimits: import('../../../../prisma-client').Prisma.JsonValue;
                durationLimits: import('../../../../prisma-client').Prisma.JsonValue;
                isInstantEvent: boolean;
                assignAllTeamMembers: boolean;
                useEventTypeDestinationCalendarEmail: boolean;
                secondaryEmailId: number | null;
            }[];
            price: number;
            title: string;
            description: string | null;
            hidden: boolean;
            length: number;
            hosts: ({
                user: {
                    username: string | null;
                    name: string | null;
                    id: number;
                    avatarUrl: string | null;
                };
            } & {
                eventTypeId: number;
                userId: number;
                isFixed: boolean;
                priority: number | null;
            })[];
            currency: string;
            id: number;
            timeZone: string | null;
            userId: number | null;
            position: number;
            slug: string;
            locations: import('../../../../prisma-client').Prisma.JsonValue;
            offsetStart: number;
            profileId: number | null;
            teamId: number | null;
            eventName: string | null;
            parentId: number | null;
            bookingFields: import('../../../../prisma-client').Prisma.JsonValue;
            periodType: import('../../../../prisma-client').$Enums.PeriodType;
            periodStartDate: Date | null;
            periodEndDate: Date | null;
            periodDays: number | null;
            periodCountCalendarDays: boolean | null;
            lockTimeZoneToggleOnBookingPage: boolean;
            requiresConfirmation: boolean;
            requiresBookerEmailVerification: boolean;
            recurringEvent: import('../../../../prisma-client').Prisma.JsonValue;
            disableGuests: boolean;
            hideCalendarNotes: boolean;
            minimumBookingNotice: number;
            beforeEventBuffer: number;
            afterEventBuffer: number;
            seatsPerTimeSlot: number | null;
            onlyShowFirstAvailableSlot: boolean;
            seatsShowAttendees: boolean | null;
            seatsShowAvailabilityCount: boolean | null;
            schedulingType: import('../../../../prisma-client').$Enums.SchedulingType | null;
            scheduleId: number | null;
            slotInterval: number | null;
            successRedirectUrl: string | null;
            bookingLimits: import('../../../../prisma-client').Prisma.JsonValue;
            durationLimits: import('../../../../prisma-client').Prisma.JsonValue;
            isInstantEvent: boolean;
            assignAllTeamMembers: boolean;
            useEventTypeDestinationCalendarEmail: boolean;
            secondaryEmailId: number | null;
            hashedLink: {
                link: string;
                id: number;
                eventTypeId: number;
            } | null;
            aiPhoneCallConfig: {
                enabled: boolean;
                id: number;
                eventTypeId: number;
                yourPhoneNumber: string;
                numberToCall: string;
                guestName: string;
                guestEmail: string | null;
                guestCompany: string | null;
                generalPrompt: string;
                beginMessage: string | null;
                llmId: string | null;
            } | null;
        }[];
        teamId?: number | null | undefined;
        parentId?: number | null | undefined;
        bookerUrl: string;
        membershipRole?: import('../../../../prisma/enums').MembershipRole | null | undefined;
        profile: {
            slug: string | null;
            name: string | null;
            image: string;
            eventTypesLockedByOrg?: boolean | undefined;
        };
        metadata: {
            membershipCount: number;
            readOnly: boolean;
        };
    }[];
    profiles: {
        teamId: number | null | undefined;
        membershipRole: import('../../../../prisma/enums').MembershipRole | null | undefined;
        membershipCount: number;
        readOnly: boolean;
        slug: string | null;
        name: string | null;
        image: string;
        eventTypesLockedByOrg?: boolean | undefined;
    }[];
}, Error>;
//# sourceMappingURL=useEventTypesPrivate.d.ts.map