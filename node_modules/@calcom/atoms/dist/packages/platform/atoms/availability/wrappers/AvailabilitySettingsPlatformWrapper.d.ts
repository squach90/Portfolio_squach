/// <reference types="react" />
import type { ScheduleLabelsType } from '../../../../features/schedules/components/Schedule';
import type { UpdateScheduleOutputType } from '../../../libraries/index.ts';
import type { ApiErrorResponse, ApiResponse } from '../../../types/index.ts';
import type { CustomClassNames } from "../AvailabilitySettings";
type AvailabilitySettingsPlatformWrapperProps = {
    id?: string;
    labels?: {
        tooltips: Partial<ScheduleLabelsType>;
    };
    customClassNames?: Partial<CustomClassNames>;
    onUpdateSuccess?: (res: ApiResponse<UpdateScheduleOutputType>) => void;
    onUpdateError?: (err: ApiErrorResponse) => void;
    onDeleteSuccess?: (res: ApiResponse) => void;
    onDeleteError?: (err: ApiErrorResponse) => void;
    disableEditableHeading?: boolean;
};
export declare const AvailabilitySettingsPlatformWrapper: ({ id, customClassNames, onDeleteError, onDeleteSuccess, onUpdateError, onUpdateSuccess, disableEditableHeading, }: AvailabilitySettingsPlatformWrapperProps) => JSX.Element;
export {};
//# sourceMappingURL=AvailabilitySettingsPlatformWrapper.d.ts.map