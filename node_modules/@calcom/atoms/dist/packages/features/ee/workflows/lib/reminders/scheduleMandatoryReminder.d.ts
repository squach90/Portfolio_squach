import type { Workflow, WorkflowsOnEventTypes, WorkflowStep } from '../../../../../prisma-client';
import type { getEventTypesFromDB } from '../../../../bookings/lib/handleNewBooking';
import type { BookingInfo } from './smsReminderManager';
import type { getDefaultEvent } from '../../../../../lib/defaultEvents';
export type NewBookingEventType = Awaited<ReturnType<typeof getDefaultEvent>> | Awaited<ReturnType<typeof getEventTypesFromDB>>;
export declare function scheduleMandatoryReminder(evt: BookingInfo, workflows: (WorkflowsOnEventTypes & {
    workflow: Workflow & {
        steps: WorkflowStep[];
    };
})[], requiresConfirmation: boolean, hideBranding: boolean, seatReferenceUid: string | undefined): Promise<void>;
//# sourceMappingURL=scheduleMandatoryReminder.d.ts.map