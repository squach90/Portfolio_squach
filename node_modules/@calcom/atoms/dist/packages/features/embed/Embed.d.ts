/// <reference types="react" />
import type { EmbedTabs, EmbedTypes } from "./types";
export declare const EmbedDialog: ({ types, tabs, eventTypeHideOptionDisabled, }: {
    types: EmbedTypes;
    tabs: EmbedTabs;
    eventTypeHideOptionDisabled: boolean;
}) => JSX.Element;
type EmbedButtonProps<T> = {
    embedUrl: string;
    namespace: string;
    children?: React.ReactNode;
    className?: string;
    as?: T;
    eventId?: number;
};
export declare const EmbedButton: <T extends import("react").ElementType<any> = import("react").ForwardRefExoticComponent<import("@calcom/ui").ButtonProps & import("react").RefAttributes<HTMLAnchorElement | HTMLButtonElement>>>({ embedUrl, children, className, as, eventId, namespace, ...props }: EmbedButtonProps<T> & React.ComponentPropsWithoutRef<T>) => JSX.Element;
export {};
//# sourceMappingURL=Embed.d.ts.map