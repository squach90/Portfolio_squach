import type { Workflow } from '../../../../../prisma-client';
import type { PrismaClient } from '../../../../../prisma';
import type { WorkflowStep } from '../../../../../prisma/client';
export declare function getSender(step: Pick<WorkflowStep, "action" | "sender"> & {
    senderName: string | null | undefined;
}): string;
export declare function isAuthorized(workflow: Pick<Workflow, "id" | "teamId" | "userId"> | null, prisma: PrismaClient, currentUserId: number, readOnly?: boolean): Promise<boolean>;
export declare function upsertSmsReminderFieldForBooking({ workflowId, eventTypeId, isSmsReminderNumberRequired, }: {
    workflowId: number;
    isSmsReminderNumberRequired: boolean;
    eventTypeId: number;
}): Promise<void>;
export declare function removeSmsReminderFieldForBooking({ workflowId, eventTypeId, }: {
    workflowId: number;
    eventTypeId: number;
}): Promise<void>;
//# sourceMappingURL=util.d.ts.map