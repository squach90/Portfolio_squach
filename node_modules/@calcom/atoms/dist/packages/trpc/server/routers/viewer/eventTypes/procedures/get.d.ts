export declare const get: import("@trpc/server/unstable-core-do-not-import").QueryProcedure<{
    input: {
        id: number;
        users?: number[] | undefined;
    };
    output: {
        eventType: {
            schedule: number | null;
            scheduleName: string | null;
            recurringEvent: import("@calcom/types/Calendar").RecurringEvent | null;
            bookingLimits: Partial<Record<"PER_DAY" | "PER_WEEK" | "PER_MONTH" | "PER_YEAR", number | undefined>> | null;
            durationLimits: Partial<Record<"PER_DAY" | "PER_WEEK" | "PER_MONTH" | "PER_YEAR", number | undefined>> | null;
            locations: import('../../../../../../app-store/locations').LocationObject[];
            metadata: {
                smartContractAddress?: string | undefined;
                blockchainId?: number | undefined;
                multipleDuration?: number[] | undefined;
                giphyThankYouPage?: string | undefined;
                apps?: {
                    alby?: {
                        price: number;
                        currency: string;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                    } | undefined;
                    basecamp3?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    dailyvideo?: {} | undefined;
                    fathom?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    feishucalendar?: {} | undefined;
                    ga4?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    giphy?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        thankYouPage?: string | undefined;
                    } | undefined;
                    googlecalendar?: {} | undefined;
                    gtm?: {
                        trackingId: string;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    hubspot?: {} | undefined;
                    intercom?: {} | undefined;
                    jelly?: {} | undefined;
                    jitsivideo?: {} | undefined;
                    larkcalendar?: {} | undefined;
                    make?: {} | undefined;
                    matomo?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        MATOMO_URL?: string | undefined;
                        SITE_ID?: string | undefined;
                    } | undefined;
                    metapixel?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    "mock-payment-app"?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    office365calendar?: {
                        client_id: string;
                        client_secret: string;
                    } | undefined;
                    office365video?: {
                        client_id: string;
                        client_secret: string;
                    } | undefined;
                    paypal?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    "pipedrive-crm"?: {} | undefined;
                    plausible?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        PLAUSIBLE_URL?: string | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    posthog?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        TRACKING_ID?: string | undefined;
                        API_HOST?: string | undefined;
                    } | undefined;
                    qr_code?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    "routing-forms"?: any;
                    salesforce?: {} | undefined;
                    shimmervideo?: {} | undefined;
                    stripe?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    tandemvideo?: {} | undefined;
                    "booking-pages-tag"?: {
                        trackingId: string;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    "event-type-app-card"?: {
                        isSunrise: boolean;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    vital?: {} | undefined;
                    webex?: {} | undefined;
                    wordpress?: {
                        isSunrise: boolean;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    zapier?: {} | undefined;
                    "zoho-bigin"?: {} | undefined;
                    zohocalendar?: {} | undefined;
                    zohocrm?: {} | undefined;
                    zoomvideo?: {} | undefined;
                } | undefined;
                additionalNotesRequired?: boolean | undefined;
                disableSuccessPage?: boolean | undefined;
                disableStandardEmails?: {
                    confirmation?: {
                        host?: boolean | undefined;
                        attendee?: boolean | undefined;
                    } | undefined;
                } | undefined;
                managedEventConfig?: {
                    unlockedFields?: {
                        price?: true | undefined;
                        bookings?: true | undefined;
                        webhooks?: true | undefined;
                        profile?: true | undefined;
                        owner?: true | undefined;
                        title?: true | undefined;
                        description?: true | undefined;
                        hidden?: true | undefined;
                        team?: true | undefined;
                        availability?: true | undefined;
                        length?: true | undefined;
                        workflows?: true | undefined;
                        users?: true | undefined;
                        hosts?: true | undefined;
                        currency?: true | undefined;
                        children?: true | undefined;
                        schedule?: true | undefined;
                        timeZone?: true | undefined;
                        userId?: true | undefined;
                        metadata?: true | undefined;
                        position?: true | undefined;
                        parent?: true | undefined;
                        slug?: true | undefined;
                        locations?: true | undefined;
                        offsetStart?: true | undefined;
                        profileId?: true | undefined;
                        teamId?: true | undefined;
                        eventName?: true | undefined;
                        parentId?: true | undefined;
                        bookingFields?: true | undefined;
                        periodType?: true | undefined;
                        periodStartDate?: true | undefined;
                        periodEndDate?: true | undefined;
                        periodDays?: true | undefined;
                        periodCountCalendarDays?: true | undefined;
                        lockTimeZoneToggleOnBookingPage?: true | undefined;
                        requiresConfirmation?: true | undefined;
                        requiresBookerEmailVerification?: true | undefined;
                        recurringEvent?: true | undefined;
                        disableGuests?: true | undefined;
                        hideCalendarNotes?: true | undefined;
                        minimumBookingNotice?: true | undefined;
                        beforeEventBuffer?: true | undefined;
                        afterEventBuffer?: true | undefined;
                        seatsPerTimeSlot?: true | undefined;
                        onlyShowFirstAvailableSlot?: true | undefined;
                        seatsShowAttendees?: true | undefined;
                        seatsShowAvailabilityCount?: true | undefined;
                        schedulingType?: true | undefined;
                        scheduleId?: true | undefined;
                        slotInterval?: true | undefined;
                        successRedirectUrl?: true | undefined;
                        forwardParamsSuccessRedirect?: true | undefined;
                        bookingLimits?: true | undefined;
                        durationLimits?: true | undefined;
                        isInstantEvent?: true | undefined;
                        assignAllTeamMembers?: true | undefined;
                        useEventTypeDestinationCalendarEmail?: true | undefined;
                        secondaryEmailId?: true | undefined;
                        hashedLink?: true | undefined;
                        destinationCalendar?: true | undefined;
                        customInputs?: true | undefined;
                        aiPhoneCallConfig?: true | undefined;
                        secondaryEmail?: true | undefined;
                        _count?: true | undefined;
                    } | undefined;
                } | undefined;
                requiresConfirmationThreshold?: {
                    time: number;
                    unit: "months" | "years" | "days" | "hours" | "minutes" | "milliseconds" | "seconds" | "dates";
                } | undefined;
                config?: {
                    useHostSchedulesForTeamEvent?: boolean | undefined;
                } | undefined;
                bookerLayouts?: {
                    enabledLayouts: import('../../../../../../prisma/zod-utils').BookerLayouts[];
                    defaultLayout: import('../../../../../../prisma/zod-utils').BookerLayouts;
                } | null | undefined;
            };
            customInputs: {
                required: boolean;
                label: string;
                placeholder: string;
                type: "TEXT" | "TEXTLONG" | "NUMBER" | "BOOL" | "RADIO" | "PHONE";
                id: number;
                eventTypeId: number;
                options?: {
                    label: string;
                    type: string;
                }[] | null | undefined;
                hasToBeCreated?: boolean | undefined;
            }[];
            users: {
                username: string | null;
                email: string;
                name: string | null;
                id: number;
                defaultScheduleId: number | null;
                avatarUrl: string | null;
                locale: string | null;
            }[];
            bookerUrl: string;
            children: {
                owner: {
                    avatar: string;
                    email: string;
                    name: string;
                    username: string;
                    membership: import('../../../../../../prisma-client').$Enums.MembershipRole;
                    id: number;
                    avatarUrl: string | null;
                    nonProfileUsername: string | null;
                    profile: import("@calcom/types/UserProfile").UserProfile;
                };
                created: boolean;
                hidden: boolean;
                slug: string;
            }[];
            price: number;
            webhooks: {
                active: boolean;
                secret: string | null;
                id: string;
                eventTypeId: number | null;
                subscriberUrl: string;
                payloadTemplate: string | null;
                eventTriggers: import('../../../../../../prisma-client').$Enums.WebhookTriggerEvents[];
            }[];
            owner: {
                id: number;
            } | null;
            title: string;
            description: string | null;
            hidden: boolean;
            team: {
                members: {
                    role: import('../../../../../../prisma-client').$Enums.MembershipRole;
                    user: {
                        username: string | null;
                        email: string;
                        name: string | null;
                        id: number;
                        defaultScheduleId: number | null;
                        avatarUrl: string | null;
                        locale: string | null;
                        eventTypes: {
                            slug: string;
                        }[];
                    };
                    accepted: boolean;
                }[];
                name: string;
                id: number;
                parent: {
                    slug: string | null;
                    organizationSettings: {
                        lockEventTypeCreationForUsers: boolean;
                    } | null;
                } | null;
                slug: string | null;
                parentId: number | null;
            } | null;
            length: number;
            workflows: ({
                workflow: {
                    team: {
                        members: {
                            role: import('../../../../../../prisma-client').$Enums.MembershipRole;
                            id: number;
                            userId: number;
                            teamId: number;
                            disableImpersonation: boolean;
                            accepted: boolean;
                        }[];
                        name: string;
                        id: number;
                        slug: string | null;
                    } | null;
                    activeOn: {
                        eventType: {
                            title: string;
                            id: number;
                            parentId: number | null;
                            _count: {
                                children: number;
                            };
                        };
                    }[];
                    steps: {
                        action: import('../../../../../../prisma-client').$Enums.WorkflowActions;
                        id: number;
                        template: import('../../../../../../prisma-client').$Enums.WorkflowTemplates;
                        stepNumber: number;
                        workflowId: number;
                        sendTo: string | null;
                        reminderBody: string | null;
                        emailSubject: string | null;
                        numberRequired: boolean | null;
                        sender: string | null;
                        numberVerificationPending: boolean;
                        includeCalendarEvent: boolean;
                    }[];
                } & {
                    name: string;
                    trigger: import('../../../../../../prisma-client').$Enums.WorkflowTriggerEvents;
                    id: number;
                    userId: number | null;
                    time: number | null;
                    position: number;
                    teamId: number | null;
                    timeUnit: import('../../../../../../prisma-client').$Enums.TimeUnit | null;
                };
            } & {
                id: number;
                eventTypeId: number;
                workflowId: number;
            })[];
            hosts: {
                userId: number;
                isFixed: boolean;
                priority: number | null;
            }[];
            currency: string;
            id: number;
            timeZone: string | null;
            userId: number | null;
            parent: {
                teamId: number | null;
            } | null;
            slug: string;
            offsetStart: number;
            teamId: number | null;
            eventName: string | null;
            bookingFields: import('../../../../../../prisma-client').Prisma.JsonValue;
            periodType: import('../../../../../../prisma-client').$Enums.PeriodType;
            periodStartDate: Date | null;
            periodEndDate: Date | null;
            periodDays: number | null;
            periodCountCalendarDays: boolean | null;
            lockTimeZoneToggleOnBookingPage: boolean;
            requiresConfirmation: boolean;
            requiresBookerEmailVerification: boolean;
            disableGuests: boolean;
            hideCalendarNotes: boolean;
            minimumBookingNotice: number;
            beforeEventBuffer: number;
            afterEventBuffer: number;
            seatsPerTimeSlot: number | null;
            onlyShowFirstAvailableSlot: boolean;
            seatsShowAttendees: boolean | null;
            seatsShowAvailabilityCount: boolean | null;
            schedulingType: import('../../../../../../prisma-client').$Enums.SchedulingType | null;
            slotInterval: number | null;
            successRedirectUrl: string | null;
            forwardParamsSuccessRedirect: boolean | null;
            isInstantEvent: boolean;
            assignAllTeamMembers: boolean;
            useEventTypeDestinationCalendarEmail: boolean;
            secondaryEmailId: number | null;
            hashedLink: {
                link: string;
                id: number;
                eventTypeId: number;
            } | null;
            destinationCalendar: {
                id: number;
                eventTypeId: number | null;
                credentialId: number | null;
                externalId: string;
                userId: number | null;
                integration: string;
                primaryEmail: string | null;
            } | null;
            aiPhoneCallConfig: {
                enabled: boolean;
                id: number;
                eventTypeId: number;
                yourPhoneNumber: string;
                numberToCall: string;
                guestName: string;
                guestEmail: string | null;
                guestCompany: string | null;
                generalPrompt: string;
                beginMessage: string | null;
                llmId: string | null;
            } | null;
        } & {
            users: ({
                username: string | null;
                email: string;
                name: string | null;
                id: number;
                defaultScheduleId: number | null;
                avatarUrl: string | null;
                locale: string | null;
            } & {
                avatar: string;
            })[];
            periodStartDate: string | null;
            periodEndDate: string | null;
            bookingFields: {
                name: string;
                type: "number" | "boolean" | "select" | "text" | "checkbox" | "email" | "address" | "name" | "radio" | "textarea" | "multiselect" | "phone" | "multiemail" | "radioInput";
                options?: {
                    label: string;
                    value: string;
                }[] | undefined;
                required?: boolean | undefined;
                label?: string | undefined;
                placeholder?: string | undefined;
                defaultLabel?: string | undefined;
                defaultPlaceholder?: string | undefined;
                labelAsSafeHtml?: string | undefined;
                getOptionsAt?: string | undefined;
                optionsInputs?: Record<string, {
                    type: "text" | "address" | "phone";
                    required?: boolean | undefined;
                    placeholder?: string | undefined;
                }> | undefined;
                variant?: string | undefined;
                variantsConfig?: {
                    variants: Record<string, {
                        fields: {
                            name: string;
                            type: "number" | "boolean" | "select" | "text" | "checkbox" | "email" | "address" | "name" | "radio" | "textarea" | "multiselect" | "phone" | "multiemail" | "radioInput";
                            required?: boolean | undefined;
                            label?: string | undefined;
                            placeholder?: string | undefined;
                            labelAsSafeHtml?: string | undefined;
                        }[];
                    }>;
                } | undefined;
                views?: {
                    label: string;
                    id: string;
                    description?: string | undefined;
                }[] | undefined;
                hideWhenJustOneOption?: boolean | undefined;
                hidden?: boolean | undefined;
                editable?: "user" | "system" | "system-but-optional" | "system-but-hidden" | "user-readonly" | undefined;
                sources?: {
                    label: string;
                    type: string;
                    id: string;
                    editUrl?: string | undefined;
                    fieldRequired?: boolean | undefined;
                }[] | undefined;
            }[] & import("zod").BRAND<"HAS_SYSTEM_FIELDS">;
        };
        locationOptions: {
            label: string;
            options: {
                label: string;
                value: string;
                disabled?: boolean | undefined;
                icon?: string | undefined;
                slug?: string | undefined;
            }[];
        }[];
        destinationCalendar: {
            id: number;
            eventTypeId: number | null;
            credentialId: number | null;
            externalId: string;
            userId: number | null;
            integration: string;
            primaryEmail: string | null;
        } | null;
        team: {
            members: {
                role: import('../../../../../../prisma-client').$Enums.MembershipRole;
                user: {
                    username: string | null;
                    email: string;
                    name: string | null;
                    id: number;
                    defaultScheduleId: number | null;
                    avatarUrl: string | null;
                    locale: string | null;
                    eventTypes: {
                        slug: string;
                    }[];
                };
                accepted: boolean;
            }[];
            name: string;
            id: number;
            parent: {
                slug: string | null;
                organizationSettings: {
                    lockEventTypeCreationForUsers: boolean;
                } | null;
            } | null;
            slug: string | null;
            parentId: number | null;
        } | null;
        teamMembers: {
            profileId: number | null;
            eventTypes: string[];
            membership: import('../../../../../../prisma-client').$Enums.MembershipRole;
            username: string | null;
            email: string;
            name: string | null;
            id: number;
            defaultScheduleId: number | null;
            avatarUrl: string | null;
            locale: string | null;
            nonProfileUsername: string | null;
            profile: import("@calcom/types/UserProfile").UserProfile;
            avatar: string;
        }[];
        currentUserMembership: {
            role: import('../../../../../../prisma-client').$Enums.MembershipRole;
            user: {
                username: string | null;
                email: string;
                name: string | null;
                id: number;
                defaultScheduleId: number | null;
                avatarUrl: string | null;
                locale: string | null;
                eventTypes: {
                    slug: string;
                }[];
            };
            accepted: boolean;
        } | null;
        isUserOrganizationAdmin: boolean;
    };
}>;
//# sourceMappingURL=get.d.ts.map