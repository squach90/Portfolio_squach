export declare const publicViewerRouter: import("@trpc/server/unstable-core-do-not-import").CreateRouterInner<import("@trpc/server/unstable-core-do-not-import").RootConfig<{
    ctx: import("../../createContext").InnerContext;
    meta: object;
    errorShape: import("@trpc/server/unstable-core-do-not-import").DefaultErrorShape;
    transformer: {
        stringify: (object: any) => string;
        parse: <T = unknown>(string: string) => T;
        serialize: (object: any) => import("superjson/dist/types").SuperJSONResult;
        deserialize: <T_1 = unknown>(payload: import("superjson/dist/types").SuperJSONResult) => T_1;
        registerClass: (v: import("superjson/dist/types").Class, options?: string | import("superjson/dist/class-registry").RegisterOptions | undefined) => void;
        registerSymbol: (v: Symbol, identifier?: string | undefined) => void;
        registerCustom: <I, O extends import("superjson/dist/types").JSONValue>(transformer: Omit<import("superjson/dist/custom-transformer-registry").CustomTransfomer<I, O>, "name">, name: string) => void;
        allowErrorProps: (...props: string[]) => void;
    };
}>, {
    session: import("@trpc/server/unstable-core-do-not-import").QueryProcedure<{
        input: void;
        output: import("next-auth").Session | null;
    }>;
    i18n: import("@trpc/server/unstable-core-do-not-import").QueryProcedure<{
        input: {
            locale: string;
            CalComVersion: string;
        };
        output: {
            i18n: import("next-i18next").SSRConfig;
            locale: string;
        };
    }>;
    countryCode: import("@trpc/server/unstable-core-do-not-import").QueryProcedure<{
        input: void;
        output: {
            countryCode: string;
        };
    }>;
    submitRating: import("@trpc/server/unstable-core-do-not-import").MutationProcedure<{
        input: {
            rating: number;
            bookingUid: string;
            comment?: string | undefined;
        };
        output: void;
    }>;
    noShow: import("@trpc/server/unstable-core-do-not-import").MutationProcedure<{
        input: {
            bookingUid: string;
        };
        output: void;
    }>;
    samlTenantProduct: import("@trpc/server/unstable-core-do-not-import").MutationProcedure<{
        input: {
            email: string;
        };
        output: {
            tenant: string;
            product: string;
        };
    }>;
    stripeCheckoutSession: import("@trpc/server/unstable-core-do-not-import").QueryProcedure<{
        input: {
            stripeCustomerId?: string | undefined;
            checkoutSessionId?: string | undefined;
        };
        output: {
            valid: boolean;
            hasPaymentFailed?: undefined;
            isPremiumUsername?: undefined;
            customer?: undefined;
        } | {
            valid: boolean;
            hasPaymentFailed: boolean;
            isPremiumUsername: boolean;
            customer: {
                username: string;
                email: string;
                stripeCustomerId: string;
            };
        };
    }>;
    slots: import("@trpc/server/unstable-core-do-not-import").CreateRouterInner<import("@trpc/server/unstable-core-do-not-import").RootConfig<{
        ctx: import("../../createContext").InnerContext;
        meta: object;
        errorShape: import("@trpc/server/unstable-core-do-not-import").DefaultErrorShape;
        transformer: {
            stringify: (object: any) => string;
            parse: <T = unknown>(string: string) => T;
            serialize: (object: any) => import("superjson/dist/types").SuperJSONResult;
            deserialize: <T_1 = unknown>(payload: import("superjson/dist/types").SuperJSONResult) => T_1;
            registerClass: (v: import("superjson/dist/types").Class, options?: string | import("superjson/dist/class-registry").RegisterOptions | undefined) => void;
            registerSymbol: (v: Symbol, identifier?: string | undefined) => void;
            registerCustom: <I, O extends import("superjson/dist/types").JSONValue>(transformer: Omit<import("superjson/dist/custom-transformer-registry").CustomTransfomer<I, O>, "name">, name: string) => void;
            allowErrorProps: (...props: string[]) => void;
        };
    }>, {
        getSchedule: import("@trpc/server/unstable-core-do-not-import").QueryProcedure<{
            input: {
                startTime: string;
                endTime: string;
                eventTypeId?: number | undefined;
                eventTypeSlug?: string | undefined;
                timeZone?: string | undefined;
                usernameList?: string[] | undefined;
                debug?: boolean | undefined;
                duration?: string | undefined;
                rescheduleUid?: string | null | undefined;
                isTeamEvent?: boolean | undefined;
                orgSlug?: string | undefined;
            };
            output: import("../viewer/slots/util").IGetAvailableSlots;
        }>;
        reserveSlot: import("@trpc/server/unstable-core-do-not-import").MutationProcedure<{
            input: {
                eventTypeId: number;
                slotUtcStartDate: string;
                slotUtcEndDate: string;
                bookingUid?: string | undefined;
            };
            output: {
                uid: string;
            };
        }>;
        removeSelectedSlotMark: import("@trpc/server/unstable-core-do-not-import").MutationProcedure<{
            input: {
                uid: string | null;
            };
            output: void;
        }>;
    }>;
    event: import("@trpc/server/unstable-core-do-not-import").QueryProcedure<{
        input: {
            username: string;
            org: string | null;
            eventSlug: string;
            isTeamEvent?: boolean | undefined;
            fromRedirectOfNonOrgLink?: boolean | undefined;
        };
        output: {
            bookingFields: {
                name: string;
                type: "number" | "boolean" | "select" | "text" | "checkbox" | "email" | "address" | "name" | "radio" | "textarea" | "multiselect" | "phone" | "multiemail" | "radioInput";
                options?: {
                    label: string;
                    value: string;
                }[] | undefined;
                required?: boolean | undefined;
                label?: string | undefined;
                placeholder?: string | undefined;
                defaultLabel?: string | undefined;
                defaultPlaceholder?: string | undefined;
                labelAsSafeHtml?: string | undefined;
                getOptionsAt?: string | undefined;
                optionsInputs?: Record<string, {
                    type: "text" | "address" | "phone";
                    required?: boolean | undefined;
                    placeholder?: string | undefined;
                }> | undefined;
                variant?: string | undefined;
                variantsConfig?: {
                    variants: Record<string, {
                        fields: {
                            name: string;
                            type: "number" | "boolean" | "select" | "text" | "checkbox" | "email" | "address" | "name" | "radio" | "textarea" | "multiselect" | "phone" | "multiemail" | "radioInput";
                            required?: boolean | undefined;
                            label?: string | undefined;
                            placeholder?: string | undefined;
                            labelAsSafeHtml?: string | undefined;
                        }[];
                    }>;
                } | undefined;
                views?: {
                    label: string;
                    id: string;
                    description?: string | undefined;
                }[] | undefined;
                hideWhenJustOneOption?: boolean | undefined;
                hidden?: boolean | undefined;
                editable?: "user" | "system" | "system-but-optional" | "system-but-hidden" | "user-readonly" | undefined;
                sources?: {
                    label: string;
                    type: string;
                    id: string;
                    editUrl?: string | undefined;
                    fieldRequired?: boolean | undefined;
                }[] | undefined;
            }[] & import("zod").BRAND<"HAS_SYSTEM_FIELDS">;
            users: ({
                metadata: undefined;
                bookerUrl: string;
                profile: import("@calcom/types/UserProfile").UserAsPersonalProfile;
                username: string | null;
                email: string;
                name: string | null;
                bio: string | null;
                theme: string | null;
                verified: boolean | null;
                locked: boolean;
                id: number;
                timeFormat: number | null;
                weekStart: string;
                timeZone: string;
                startTime: number;
                endTime: number;
                emailVerified: Date | null;
                avatarUrl: string | null;
                bufferTime: number;
                hideBranding: boolean;
                createdDate: Date;
                trialEndsAt: Date | null;
                completedOnboarding: boolean;
                locale: string | null;
                twoFactorSecret: string | null;
                twoFactorEnabled: boolean;
                backupCodes: string | null;
                identityProviderId: string | null;
                invitedTo: number | null;
                brandColor: string | null;
                darkBrandColor: string | null;
                allowDynamicBooking: boolean | null;
                allowSEOIndexing: boolean | null;
                receiveMonthlyDigestEmail: boolean | null;
                disableImpersonation: boolean;
                movedToProfileId: number | null;
            } | {
                metadata: undefined;
                bookerUrl: string;
                profile: {
                    organization: Omit<{
                        name: string;
                        id: number;
                        metadata: import('../../../../prisma-client').Prisma.JsonValue;
                        slug: string | null;
                        logoUrl: string | null;
                        calVideoLogo: string | null;
                        bannerUrl: string | null;
                    } & Omit<Pick<{
                        id: number;
                        name: string;
                        slug: string | null;
                        logo: string | null;
                        logoUrl: string | null;
                        calVideoLogo: string | null;
                        appLogo: string | null;
                        appIconLogo: string | null;
                        bio: string | null;
                        hideBranding: boolean;
                        isPrivate: boolean;
                        hideBookATeamMember: boolean;
                        createdAt: Date;
                        metadata: import('../../../../prisma-client').Prisma.JsonValue;
                        theme: string | null;
                        brandColor: string | null;
                        darkBrandColor: string | null;
                        bannerUrl: string | null;
                        parentId: number | null;
                        timeFormat: number | null;
                        timeZone: string;
                        weekStart: string;
                        isOrganization: boolean;
                        pendingPayment: boolean;
                        isPlatform: boolean;
                        smsLockState: import('../../../../prisma-client').$Enums.SMSLockState;
                    }, "name" | "id" | "metadata" | "slug" | "logoUrl" | "calVideoLogo" | "bannerUrl">, "metadata"> & {
                        requestedSlug: string | null;
                        metadata: {
                            requestedSlug: string | null;
                            paymentId?: string | undefined;
                            subscriptionId?: string | null | undefined;
                            subscriptionItemId?: string | null | undefined;
                            orgSeats?: number | null | undefined;
                            orgPricePerSeat?: number | null | undefined;
                            migratedToOrgFrom?: {
                                teamSlug?: string | null | undefined;
                                lastMigrationTime?: string | undefined;
                                reverted?: boolean | undefined;
                                lastRevertTime?: string | undefined;
                            } | undefined;
                        };
                    }, "metadata"> & {
                        requestedSlug: string | null;
                        metadata: {
                            requestedSlug: string | null;
                            paymentId?: string | undefined;
                            subscriptionId?: string | null | undefined;
                            subscriptionItemId?: string | null | undefined;
                            orgSeats?: number | null | undefined;
                            orgPricePerSeat?: number | null | undefined;
                            migratedToOrgFrom?: {
                                teamSlug?: string | null | undefined;
                                lastMigrationTime?: string | undefined;
                                reverted?: boolean | undefined;
                                lastRevertTime?: string | undefined;
                            } | undefined;
                        };
                    };
                    username: string;
                    id: number;
                    uid: string;
                    userId: number;
                    organizationId: number;
                    createdAt: Date & string;
                    updatedAt: Date & string;
                    upId: string;
                };
                username: string | null;
                email: string;
                name: string | null;
                bio: string | null;
                theme: string | null;
                verified: boolean | null;
                locked: boolean;
                id: number;
                timeFormat: number | null;
                weekStart: string;
                timeZone: string;
                startTime: number;
                endTime: number;
                emailVerified: Date | null;
                avatarUrl: string | null;
                bufferTime: number;
                hideBranding: boolean;
                createdDate: Date;
                trialEndsAt: Date | null;
                completedOnboarding: boolean;
                locale: string | null;
                twoFactorSecret: string | null;
                twoFactorEnabled: boolean;
                backupCodes: string | null;
                identityProviderId: string | null;
                invitedTo: number | null;
                brandColor: string | null;
                darkBrandColor: string | null;
                allowDynamicBooking: boolean | null;
                allowSEOIndexing: boolean | null;
                receiveMonthlyDigestEmail: boolean | null;
                disableImpersonation: boolean;
                movedToProfileId: number | null;
            })[];
            locations: (Pick<Partial<import('../../../../app-store/locations').LocationObject>, "link" | "address"> & Omit<import('../../../../app-store/locations').LocationObject, "link" | "address">)[];
            profile: {
                image?: string | undefined;
                name?: string | undefined;
                username?: string | null | undefined;
                weekStart: string;
                brandColor: string | null;
                darkBrandColor: string | null;
                theme: null;
                bookerLayouts: {
                    enabledLayouts: import('../../../../prisma/zod-utils').BookerLayouts[];
                    defaultLayout: import('../../../../prisma/zod-utils').BookerLayouts;
                } | null;
            };
            entity: {
                considerUnpublished: boolean;
                fromRedirectOfNonOrgLink: boolean;
                orgSlug: string | null;
                name: string | null;
                teamSlug: null;
                logoUrl: null;
            };
            isInstantEvent: boolean;
            metadata: {
                smartContractAddress?: string | undefined;
                blockchainId?: number | undefined;
                multipleDuration?: number[] | undefined;
                giphyThankYouPage?: string | undefined;
                apps?: {
                    alby?: {
                        price: number;
                        currency: string;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                    } | undefined;
                    basecamp3?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    dailyvideo?: {} | undefined;
                    fathom?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    feishucalendar?: {} | undefined;
                    ga4?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    giphy?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        thankYouPage?: string | undefined;
                    } | undefined;
                    googlecalendar?: {} | undefined;
                    gtm?: {
                        trackingId: string;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    hubspot?: {} | undefined;
                    intercom?: {} | undefined;
                    jelly?: {} | undefined;
                    jitsivideo?: {} | undefined;
                    larkcalendar?: {} | undefined;
                    make?: {} | undefined;
                    matomo?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        MATOMO_URL?: string | undefined;
                        SITE_ID?: string | undefined;
                    } | undefined;
                    metapixel?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    "mock-payment-app"?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    office365calendar?: {
                        client_id: string;
                        client_secret: string;
                    } | undefined;
                    office365video?: {
                        client_id: string;
                        client_secret: string;
                    } | undefined;
                    paypal?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    "pipedrive-crm"?: {} | undefined;
                    plausible?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        PLAUSIBLE_URL?: string | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    posthog?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        TRACKING_ID?: string | undefined;
                        API_HOST?: string | undefined;
                    } | undefined;
                    qr_code?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    "routing-forms"?: any;
                    salesforce?: {} | undefined;
                    shimmervideo?: {} | undefined;
                    stripe?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    tandemvideo?: {} | undefined;
                    "booking-pages-tag"?: {
                        trackingId: string;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    "event-type-app-card"?: {
                        isSunrise: boolean;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    vital?: {} | undefined;
                    webex?: {} | undefined;
                    wordpress?: {
                        isSunrise: boolean;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    zapier?: {} | undefined;
                    "zoho-bigin"?: {} | undefined;
                    zohocalendar?: {} | undefined;
                    zohocrm?: {} | undefined;
                    zoomvideo?: {} | undefined;
                } | undefined;
                additionalNotesRequired?: boolean | undefined;
                disableSuccessPage?: boolean | undefined;
                disableStandardEmails?: {
                    confirmation?: {
                        host?: boolean | undefined;
                        attendee?: boolean | undefined;
                    } | undefined;
                } | undefined;
                managedEventConfig?: {
                    unlockedFields?: {
                        price?: true | undefined;
                        bookings?: true | undefined;
                        webhooks?: true | undefined;
                        profile?: true | undefined;
                        owner?: true | undefined;
                        title?: true | undefined;
                        description?: true | undefined;
                        hidden?: true | undefined;
                        team?: true | undefined;
                        availability?: true | undefined;
                        length?: true | undefined;
                        workflows?: true | undefined;
                        users?: true | undefined;
                        hosts?: true | undefined;
                        currency?: true | undefined;
                        children?: true | undefined;
                        schedule?: true | undefined;
                        timeZone?: true | undefined;
                        userId?: true | undefined;
                        metadata?: true | undefined;
                        position?: true | undefined;
                        parent?: true | undefined;
                        slug?: true | undefined;
                        locations?: true | undefined;
                        offsetStart?: true | undefined;
                        profileId?: true | undefined;
                        teamId?: true | undefined;
                        eventName?: true | undefined;
                        parentId?: true | undefined;
                        bookingFields?: true | undefined;
                        periodType?: true | undefined;
                        periodStartDate?: true | undefined;
                        periodEndDate?: true | undefined;
                        periodDays?: true | undefined;
                        periodCountCalendarDays?: true | undefined;
                        lockTimeZoneToggleOnBookingPage?: true | undefined;
                        requiresConfirmation?: true | undefined;
                        requiresBookerEmailVerification?: true | undefined;
                        recurringEvent?: true | undefined;
                        disableGuests?: true | undefined;
                        hideCalendarNotes?: true | undefined;
                        minimumBookingNotice?: true | undefined;
                        beforeEventBuffer?: true | undefined;
                        afterEventBuffer?: true | undefined;
                        seatsPerTimeSlot?: true | undefined;
                        onlyShowFirstAvailableSlot?: true | undefined;
                        seatsShowAttendees?: true | undefined;
                        seatsShowAvailabilityCount?: true | undefined;
                        schedulingType?: true | undefined;
                        scheduleId?: true | undefined;
                        slotInterval?: true | undefined;
                        successRedirectUrl?: true | undefined;
                        forwardParamsSuccessRedirect?: true | undefined;
                        bookingLimits?: true | undefined;
                        durationLimits?: true | undefined;
                        isInstantEvent?: true | undefined;
                        assignAllTeamMembers?: true | undefined;
                        useEventTypeDestinationCalendarEmail?: true | undefined;
                        secondaryEmailId?: true | undefined;
                        hashedLink?: true | undefined;
                        destinationCalendar?: true | undefined;
                        customInputs?: true | undefined;
                        aiPhoneCallConfig?: true | undefined;
                        secondaryEmail?: true | undefined;
                        _count?: true | undefined;
                    } | undefined;
                } | undefined;
                requiresConfirmationThreshold?: {
                    time: number;
                    unit: "months" | "years" | "days" | "hours" | "minutes" | "milliseconds" | "seconds" | "dates";
                } | undefined;
                config?: {
                    useHostSchedulesForTeamEvent?: boolean | undefined;
                } | undefined;
                bookerLayouts?: {
                    enabledLayouts: import('../../../../prisma/zod-utils').BookerLayouts[];
                    defaultLayout: import('../../../../prisma/zod-utils').BookerLayouts;
                } | null | undefined;
            } | null;
            isDynamic: boolean;
            periodCountCalendarDays: boolean;
            periodStartDate: null;
            periodEndDate: null;
            beforeEventBuffer: number;
            afterEventBuffer: number;
            periodType: "UNLIMITED";
            periodDays: null;
            slotInterval: null;
            offsetStart: number;
            customInputs: {
                required: boolean;
                label: string;
                placeholder: string;
                type: "TEXT" | "TEXTLONG" | "NUMBER" | "BOOL" | "RADIO" | "PHONE";
                id: number;
                eventTypeId: number;
                options?: {
                    label: string;
                    type: string;
                }[] | null | undefined;
                hasToBeCreated?: boolean | undefined;
            }[];
            disableGuests: boolean;
            minimumBookingNotice: number;
            schedule: null;
            timeZone: null;
            successRedirectUrl: string;
            forwardParamsSuccessRedirect: boolean;
            teamId: null;
            scheduleId: null;
            availability: never[];
            price: number;
            currency: string;
            schedulingType: "COLLECTIVE";
            seatsPerTimeSlot: null;
            seatsShowAttendees: null;
            seatsShowAvailabilityCount: null;
            onlyShowFirstAvailableSlot: boolean;
            id: number;
            hideCalendarNotes: boolean;
            recurringEvent: null;
            destinationCalendar: null;
            team: null;
            lockTimeZoneToggleOnBookingPage: boolean;
            requiresConfirmation: boolean;
            requiresBookerEmailVerification: boolean;
            bookingLimits: null;
            durationLimits: null;
            hidden: boolean;
            userId: number;
            parentId: null;
            owner: null;
            workflows: never[];
            hosts: never[];
            assignAllTeamMembers: boolean;
            useEventTypeDestinationCalendarEmail: boolean;
            secondaryEmailId: null;
            secondaryEmail: null;
            length: number;
            slug: string;
            title: string;
            eventName: string;
            description: string;
            descriptionAsSafeHTML: string;
            position: number;
        } | {
            bookerLayouts: {
                enabledLayouts: import('../../../../prisma/zod-utils').BookerLayouts[];
                defaultLayout: import('../../../../prisma/zod-utils').BookerLayouts;
            } | null;
            description: string;
            metadata: {
                smartContractAddress?: string | undefined;
                blockchainId?: number | undefined;
                multipleDuration?: number[] | undefined;
                giphyThankYouPage?: string | undefined;
                apps?: {
                    alby?: {
                        price: number;
                        currency: string;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                    } | undefined;
                    basecamp3?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    dailyvideo?: {} | undefined;
                    fathom?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    feishucalendar?: {} | undefined;
                    ga4?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    giphy?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        thankYouPage?: string | undefined;
                    } | undefined;
                    googlecalendar?: {} | undefined;
                    gtm?: {
                        trackingId: string;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    hubspot?: {} | undefined;
                    intercom?: {} | undefined;
                    jelly?: {} | undefined;
                    jitsivideo?: {} | undefined;
                    larkcalendar?: {} | undefined;
                    make?: {} | undefined;
                    matomo?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        MATOMO_URL?: string | undefined;
                        SITE_ID?: string | undefined;
                    } | undefined;
                    metapixel?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    "mock-payment-app"?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    office365calendar?: {
                        client_id: string;
                        client_secret: string;
                    } | undefined;
                    office365video?: {
                        client_id: string;
                        client_secret: string;
                    } | undefined;
                    paypal?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    "pipedrive-crm"?: {} | undefined;
                    plausible?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        PLAUSIBLE_URL?: string | undefined;
                        trackingId?: string | undefined;
                    } | undefined;
                    posthog?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        TRACKING_ID?: string | undefined;
                        API_HOST?: string | undefined;
                    } | undefined;
                    qr_code?: {
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    "routing-forms"?: any;
                    salesforce?: {} | undefined;
                    shimmervideo?: {} | undefined;
                    stripe?: {
                        price: number;
                        currency: string;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                        paymentOption?: string | undefined;
                        enabled?: boolean | undefined;
                    } | undefined;
                    tandemvideo?: {} | undefined;
                    "booking-pages-tag"?: {
                        trackingId: string;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    "event-type-app-card"?: {
                        isSunrise: boolean;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    vital?: {} | undefined;
                    webex?: {} | undefined;
                    wordpress?: {
                        isSunrise: boolean;
                        enabled?: boolean | undefined;
                        credentialId?: number | undefined;
                        appCategories?: string[] | undefined;
                    } | undefined;
                    zapier?: {} | undefined;
                    "zoho-bigin"?: {} | undefined;
                    zohocalendar?: {} | undefined;
                    zohocrm?: {} | undefined;
                    zoomvideo?: {} | undefined;
                } | undefined;
                additionalNotesRequired?: boolean | undefined;
                disableSuccessPage?: boolean | undefined;
                disableStandardEmails?: {
                    confirmation?: {
                        host?: boolean | undefined;
                        attendee?: boolean | undefined;
                    } | undefined;
                } | undefined;
                managedEventConfig?: {
                    unlockedFields?: {
                        price?: true | undefined;
                        bookings?: true | undefined;
                        webhooks?: true | undefined;
                        profile?: true | undefined;
                        owner?: true | undefined;
                        title?: true | undefined;
                        description?: true | undefined;
                        hidden?: true | undefined;
                        team?: true | undefined;
                        availability?: true | undefined;
                        length?: true | undefined;
                        workflows?: true | undefined;
                        users?: true | undefined;
                        hosts?: true | undefined;
                        currency?: true | undefined;
                        children?: true | undefined;
                        schedule?: true | undefined;
                        timeZone?: true | undefined;
                        userId?: true | undefined;
                        metadata?: true | undefined;
                        position?: true | undefined;
                        parent?: true | undefined;
                        slug?: true | undefined;
                        locations?: true | undefined;
                        offsetStart?: true | undefined;
                        profileId?: true | undefined;
                        teamId?: true | undefined;
                        eventName?: true | undefined;
                        parentId?: true | undefined;
                        bookingFields?: true | undefined;
                        periodType?: true | undefined;
                        periodStartDate?: true | undefined;
                        periodEndDate?: true | undefined;
                        periodDays?: true | undefined;
                        periodCountCalendarDays?: true | undefined;
                        lockTimeZoneToggleOnBookingPage?: true | undefined;
                        requiresConfirmation?: true | undefined;
                        requiresBookerEmailVerification?: true | undefined;
                        recurringEvent?: true | undefined;
                        disableGuests?: true | undefined;
                        hideCalendarNotes?: true | undefined;
                        minimumBookingNotice?: true | undefined;
                        beforeEventBuffer?: true | undefined;
                        afterEventBuffer?: true | undefined;
                        seatsPerTimeSlot?: true | undefined;
                        onlyShowFirstAvailableSlot?: true | undefined;
                        seatsShowAttendees?: true | undefined;
                        seatsShowAvailabilityCount?: true | undefined;
                        schedulingType?: true | undefined;
                        scheduleId?: true | undefined;
                        slotInterval?: true | undefined;
                        successRedirectUrl?: true | undefined;
                        forwardParamsSuccessRedirect?: true | undefined;
                        bookingLimits?: true | undefined;
                        durationLimits?: true | undefined;
                        isInstantEvent?: true | undefined;
                        assignAllTeamMembers?: true | undefined;
                        useEventTypeDestinationCalendarEmail?: true | undefined;
                        secondaryEmailId?: true | undefined;
                        hashedLink?: true | undefined;
                        destinationCalendar?: true | undefined;
                        customInputs?: true | undefined;
                        aiPhoneCallConfig?: true | undefined;
                        secondaryEmail?: true | undefined;
                        _count?: true | undefined;
                    } | undefined;
                } | undefined;
                requiresConfirmationThreshold?: {
                    time: number;
                    unit: "months" | "years" | "days" | "hours" | "minutes" | "milliseconds" | "seconds" | "dates";
                } | undefined;
                config?: {
                    useHostSchedulesForTeamEvent?: boolean | undefined;
                } | undefined;
                bookerLayouts?: {
                    enabledLayouts: import('../../../../prisma/zod-utils').BookerLayouts[];
                    defaultLayout: import('../../../../prisma/zod-utils').BookerLayouts;
                } | null | undefined;
            } | null;
            customInputs: {
                required: boolean;
                label: string;
                placeholder: string;
                type: "TEXT" | "TEXTLONG" | "NUMBER" | "BOOL" | "RADIO" | "PHONE";
                id: number;
                eventTypeId: number;
                options?: {
                    label: string;
                    type: string;
                }[] | null | undefined;
                hasToBeCreated?: boolean | undefined;
            }[];
            locations: (Pick<Partial<import('../../../../app-store/locations').LocationObject>, "link" | "address"> & Omit<import('../../../../app-store/locations').LocationObject, "link" | "address">)[];
            bookingFields: {
                name: string;
                type: "number" | "boolean" | "select" | "text" | "checkbox" | "email" | "address" | "name" | "radio" | "textarea" | "multiselect" | "phone" | "multiemail" | "radioInput";
                options?: {
                    label: string;
                    value: string;
                }[] | undefined;
                required?: boolean | undefined;
                label?: string | undefined;
                placeholder?: string | undefined;
                defaultLabel?: string | undefined;
                defaultPlaceholder?: string | undefined;
                labelAsSafeHtml?: string | undefined;
                getOptionsAt?: string | undefined;
                optionsInputs?: Record<string, {
                    type: "text" | "address" | "phone";
                    required?: boolean | undefined;
                    placeholder?: string | undefined;
                }> | undefined;
                variant?: string | undefined;
                variantsConfig?: {
                    variants: Record<string, {
                        fields: {
                            name: string;
                            type: "number" | "boolean" | "select" | "text" | "checkbox" | "email" | "address" | "name" | "radio" | "textarea" | "multiselect" | "phone" | "multiemail" | "radioInput";
                            required?: boolean | undefined;
                            label?: string | undefined;
                            placeholder?: string | undefined;
                            labelAsSafeHtml?: string | undefined;
                        }[];
                    }>;
                } | undefined;
                views?: {
                    label: string;
                    id: string;
                    description?: string | undefined;
                }[] | undefined;
                hideWhenJustOneOption?: boolean | undefined;
                hidden?: boolean | undefined;
                editable?: "user" | "system" | "system-but-optional" | "system-but-hidden" | "user-readonly" | undefined;
                sources?: {
                    label: string;
                    type: string;
                    id: string;
                    editUrl?: string | undefined;
                    fieldRequired?: boolean | undefined;
                }[] | undefined;
            }[] & import("zod").BRAND<"HAS_SYSTEM_FIELDS">;
            recurringEvent: import("@calcom/types/Calendar").RecurringEvent | null;
            profile: {
                username: string | null | undefined;
                name: string | null;
                weekStart: string;
                image: string;
                brandColor: string | null;
                darkBrandColor: string | null;
                theme: string | null;
                bookerLayouts: {
                    enabledLayouts: import('../../../../prisma/zod-utils').BookerLayouts[];
                    defaultLayout: import('../../../../prisma/zod-utils').BookerLayouts;
                } | null;
            };
            users: {
                username: string | null;
                name: string | null;
                weekStart: string;
                organizationId: any;
                avatarUrl: string | null;
                profile: import("@calcom/types/UserProfile").UserProfile;
                bookerUrl: string;
            }[];
            entity: {
                logoUrl?: string | undefined;
                name: any;
                fromRedirectOfNonOrgLink: boolean;
                considerUnpublished: boolean;
                orgSlug: string | null;
                teamSlug: string | null;
            };
            isDynamic: boolean;
            isInstantEvent: boolean;
            aiPhoneCallConfig: {
                enabled: boolean;
                id: number;
                eventTypeId: number;
                yourPhoneNumber: string;
                numberToCall: string;
                guestName: string;
                guestEmail: string | null;
                guestCompany: string | null;
                generalPrompt: string;
                beginMessage: string | null;
                llmId: string | null;
            } | null;
            assignAllTeamMembers: boolean;
            owner: ({
                username: string | null;
                name: string | null;
                organization: {
                    name: string;
                    id: number;
                    slug: string | null;
                    calVideoLogo: string | null;
                    bannerUrl: string | null;
                } | null;
                theme: string | null;
                id: number;
                defaultScheduleId: number | null;
                weekStart: string;
                metadata: import('../../../../prisma-client').Prisma.JsonValue;
                avatarUrl: string | null;
                brandColor: string | null;
                darkBrandColor: string | null;
            } & {
                nonProfileUsername: string | null;
                profile: import("@calcom/types/UserProfile").UserProfile;
            }) | null;
            hosts: {
                user: {
                    username: string | null;
                    name: string | null;
                    organization: {
                        name: string;
                        id: number;
                        slug: string | null;
                        calVideoLogo: string | null;
                        bannerUrl: string | null;
                    } | null;
                    theme: string | null;
                    id: number;
                    defaultScheduleId: number | null;
                    weekStart: string;
                    metadata: import('../../../../prisma-client').Prisma.JsonValue;
                    avatarUrl: string | null;
                    brandColor: string | null;
                    darkBrandColor: string | null;
                } & {
                    nonProfileUsername: string | null;
                    profile: import("@calcom/types/UserProfile").UserProfile;
                };
            }[];
            price: number;
            title: string;
            hidden: boolean;
            team: {
                name: string;
                theme: string | null;
                metadata: import('../../../../prisma-client').Prisma.JsonValue;
                parent: {
                    name: string;
                    slug: string | null;
                    logoUrl: string | null;
                    bannerUrl: string | null;
                } | null;
                slug: string | null;
                parentId: number | null;
                brandColor: string | null;
                darkBrandColor: string | null;
                logoUrl: string | null;
            } | null;
            length: number;
            workflows: ({
                workflow: {
                    steps: {
                        action: import('../../../../prisma-client').$Enums.WorkflowActions;
                        id: number;
                        template: import('../../../../prisma-client').$Enums.WorkflowTemplates;
                        stepNumber: number;
                        workflowId: number;
                        sendTo: string | null;
                        reminderBody: string | null;
                        emailSubject: string | null;
                        numberRequired: boolean | null;
                        sender: string | null;
                        numberVerificationPending: boolean;
                        includeCalendarEvent: boolean;
                    }[];
                } & {
                    name: string;
                    trigger: import('../../../../prisma-client').$Enums.WorkflowTriggerEvents;
                    id: number;
                    userId: number | null;
                    time: number | null;
                    position: number;
                    teamId: number | null;
                    timeUnit: import('../../../../prisma-client').$Enums.TimeUnit | null;
                };
            } & {
                id: number;
                eventTypeId: number;
                workflowId: number;
            })[];
            currency: string;
            schedule: {
                id: number;
                timeZone: string | null;
            } | null;
            id: number;
            slug: string;
            eventName: string | null;
            lockTimeZoneToggleOnBookingPage: boolean;
            requiresConfirmation: boolean;
            requiresBookerEmailVerification: boolean;
            disableGuests: boolean;
            seatsPerTimeSlot: number | null;
            seatsShowAvailabilityCount: boolean | null;
            schedulingType: import('../../../../prisma-client').$Enums.SchedulingType | null;
            successRedirectUrl: string | null;
            forwardParamsSuccessRedirect: boolean | null;
        } | null;
    }>;
    ssoConnections: import("@trpc/server/unstable-core-do-not-import").QueryProcedure<{
        input: void;
        output: {
            connectionExists: null;
        } | {
            connectionExists: boolean;
        };
    }>;
}>;
//# sourceMappingURL=_router.d.ts.map