import type { CalendarEvent } from "@calcom/types/Calendar";
export declare function getBooking(bookingId: number): Promise<{
    booking: {
        paid: boolean;
        location: string | null;
        title: string;
        description: string | null;
        attendees: {
            email: string;
            name: string;
            id: number;
            timeZone: string;
            bookingId: number | null;
            locale: string | null;
        }[];
        status: import('../../prisma-client').$Enums.BookingStatus;
        user: {
            username: string | null;
            email: string;
            name: string | null;
            id: number;
            timeFormat: number | null;
            timeZone: string;
            destinationCalendar: {
                id: number;
                eventTypeId: number | null;
                credentialId: number | null;
                externalId: string;
                userId: number | null;
                integration: string;
                primaryEmail: string | null;
            } | null;
            locale: string | null;
            credentials: {
                type: string;
                user: {
                    email: string;
                } | null;
                id: number;
                userId: number | null;
                invalid: boolean | null;
                key: import('../../prisma-client').Prisma.JsonValue;
                teamId: number | null;
                appId: string | null;
            }[];
        } | null;
        eventType: {
            price: number;
            title: string;
            description: string | null;
            team: {
                parentId: number | null;
            } | null;
            length: number;
            workflows: {
                workflow: {
                    name: string;
                    trigger: import('../../prisma-client').$Enums.WorkflowTriggerEvents;
                    id: number;
                    userId: number | null;
                    time: number | null;
                    position: number;
                    teamId: number | null;
                    timeUnit: import('../../prisma-client').$Enums.TimeUnit | null;
                    steps: {
                        action: import('../../prisma-client').$Enums.WorkflowActions;
                        id: number;
                        template: import('../../prisma-client').$Enums.WorkflowTemplates;
                        stepNumber: number;
                        workflowId: number;
                        sendTo: string | null;
                        reminderBody: string | null;
                        emailSubject: string | null;
                        numberRequired: boolean | null;
                        sender: string | null;
                        numberVerificationPending: boolean;
                        includeCalendarEvent: boolean;
                    }[];
                };
            }[];
            currency: string;
            id: number;
            metadata: import('../../prisma-client').Prisma.JsonValue;
            slug: string;
            teamId: number | null;
            parentId: number | null;
            bookingFields: import('../../prisma-client').Prisma.JsonValue;
            requiresConfirmation: boolean;
        } | null;
        id: number;
        startTime: Date;
        endTime: Date;
        eventTypeId: number | null;
        uid: string;
        userId: number | null;
        metadata: import('../../prisma-client').Prisma.JsonValue;
        destinationCalendar: {
            id: number;
            eventTypeId: number | null;
            credentialId: number | null;
            externalId: string;
            userId: number | null;
            integration: string;
            primaryEmail: string | null;
        } | null;
        customInputs: import('../../prisma-client').Prisma.JsonValue;
        smsReminderNumber: string | null;
        responses: import('../../prisma-client').Prisma.JsonValue;
        userPrimaryEmail: string | null;
    };
    user: {
        username: string | null;
        email: string;
        name: string | null;
        id: number;
        timeFormat: number | null;
        timeZone: string;
        destinationCalendar: {
            id: number;
            eventTypeId: number | null;
            credentialId: number | null;
            externalId: string;
            userId: number | null;
            integration: string;
            primaryEmail: string | null;
        } | null;
        locale: string | null;
        credentials: {
            type: string;
            user: {
                email: string;
            } | null;
            id: number;
            userId: number | null;
            invalid: boolean | null;
            key: import('../../prisma-client').Prisma.JsonValue;
            teamId: number | null;
            appId: string | null;
        }[];
    };
    evt: CalendarEvent;
    eventType: {
        metadata: {
            smartContractAddress?: string | undefined;
            blockchainId?: number | undefined;
            multipleDuration?: number[] | undefined;
            giphyThankYouPage?: string | undefined;
            apps?: {
                alby?: {
                    price: number;
                    currency: string;
                    appCategories?: string[] | undefined;
                    paymentOption?: string | undefined;
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                } | undefined;
                basecamp3?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                } | undefined;
                dailyvideo?: {} | undefined;
                fathom?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    trackingId?: string | undefined;
                } | undefined;
                feishucalendar?: {} | undefined;
                ga4?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    trackingId?: string | undefined;
                } | undefined;
                giphy?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    thankYouPage?: string | undefined;
                } | undefined;
                googlecalendar?: {} | undefined;
                gtm?: {
                    trackingId: string;
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                } | undefined;
                hubspot?: {} | undefined;
                intercom?: {} | undefined;
                jelly?: {} | undefined;
                jitsivideo?: {} | undefined;
                larkcalendar?: {} | undefined;
                make?: {} | undefined;
                matomo?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    MATOMO_URL?: string | undefined;
                    SITE_ID?: string | undefined;
                } | undefined;
                metapixel?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    trackingId?: string | undefined;
                } | undefined;
                "mock-payment-app"?: {
                    price: number;
                    currency: string;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    paymentOption?: string | undefined;
                    enabled?: boolean | undefined;
                } | undefined;
                office365calendar?: {
                    client_id: string;
                    client_secret: string;
                } | undefined;
                office365video?: {
                    client_id: string;
                    client_secret: string;
                } | undefined;
                paypal?: {
                    price: number;
                    currency: string;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    paymentOption?: string | undefined;
                    enabled?: boolean | undefined;
                } | undefined;
                "pipedrive-crm"?: {} | undefined;
                plausible?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    PLAUSIBLE_URL?: string | undefined;
                    trackingId?: string | undefined;
                } | undefined;
                posthog?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    TRACKING_ID?: string | undefined;
                    API_HOST?: string | undefined;
                } | undefined;
                qr_code?: {
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                } | undefined;
                "routing-forms"?: any;
                salesforce?: {} | undefined;
                shimmervideo?: {} | undefined;
                stripe?: {
                    price: number;
                    currency: string;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                    paymentOption?: string | undefined;
                    enabled?: boolean | undefined;
                } | undefined;
                tandemvideo?: {} | undefined;
                "booking-pages-tag"?: {
                    trackingId: string;
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                } | undefined;
                "event-type-app-card"?: {
                    isSunrise: boolean;
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                } | undefined;
                vital?: {} | undefined;
                webex?: {} | undefined;
                wordpress?: {
                    isSunrise: boolean;
                    enabled?: boolean | undefined;
                    credentialId?: number | undefined;
                    appCategories?: string[] | undefined;
                } | undefined;
                zapier?: {} | undefined;
                "zoho-bigin"?: {} | undefined;
                zohocalendar?: {} | undefined;
                zohocrm?: {} | undefined;
                zoomvideo?: {} | undefined;
            } | undefined;
            additionalNotesRequired?: boolean | undefined;
            disableSuccessPage?: boolean | undefined;
            disableStandardEmails?: {
                confirmation?: {
                    host?: boolean | undefined;
                    attendee?: boolean | undefined;
                } | undefined;
            } | undefined;
            managedEventConfig?: {
                unlockedFields?: {
                    price?: true | undefined;
                    bookings?: true | undefined;
                    webhooks?: true | undefined;
                    profile?: true | undefined;
                    owner?: true | undefined;
                    title?: true | undefined;
                    description?: true | undefined;
                    hidden?: true | undefined;
                    team?: true | undefined;
                    availability?: true | undefined;
                    length?: true | undefined;
                    workflows?: true | undefined;
                    users?: true | undefined;
                    hosts?: true | undefined;
                    currency?: true | undefined;
                    children?: true | undefined;
                    schedule?: true | undefined;
                    timeZone?: true | undefined;
                    userId?: true | undefined;
                    metadata?: true | undefined;
                    position?: true | undefined;
                    parent?: true | undefined;
                    slug?: true | undefined;
                    locations?: true | undefined;
                    offsetStart?: true | undefined;
                    profileId?: true | undefined;
                    teamId?: true | undefined;
                    eventName?: true | undefined;
                    parentId?: true | undefined;
                    bookingFields?: true | undefined;
                    periodType?: true | undefined;
                    periodStartDate?: true | undefined;
                    periodEndDate?: true | undefined;
                    periodDays?: true | undefined;
                    periodCountCalendarDays?: true | undefined;
                    lockTimeZoneToggleOnBookingPage?: true | undefined;
                    requiresConfirmation?: true | undefined;
                    requiresBookerEmailVerification?: true | undefined;
                    recurringEvent?: true | undefined;
                    disableGuests?: true | undefined;
                    hideCalendarNotes?: true | undefined;
                    minimumBookingNotice?: true | undefined;
                    beforeEventBuffer?: true | undefined;
                    afterEventBuffer?: true | undefined;
                    seatsPerTimeSlot?: true | undefined;
                    onlyShowFirstAvailableSlot?: true | undefined;
                    seatsShowAttendees?: true | undefined;
                    seatsShowAvailabilityCount?: true | undefined;
                    schedulingType?: true | undefined;
                    scheduleId?: true | undefined;
                    slotInterval?: true | undefined;
                    successRedirectUrl?: true | undefined;
                    forwardParamsSuccessRedirect?: true | undefined;
                    bookingLimits?: true | undefined;
                    durationLimits?: true | undefined;
                    isInstantEvent?: true | undefined;
                    assignAllTeamMembers?: true | undefined;
                    useEventTypeDestinationCalendarEmail?: true | undefined;
                    secondaryEmailId?: true | undefined;
                    hashedLink?: true | undefined;
                    destinationCalendar?: true | undefined;
                    customInputs?: true | undefined;
                    aiPhoneCallConfig?: true | undefined;
                    secondaryEmail?: true | undefined;
                    _count?: true | undefined;
                } | undefined;
            } | undefined;
            requiresConfirmationThreshold?: {
                time: number;
                unit: "months" | "years" | "days" | "hours" | "minutes" | "milliseconds" | "seconds" | "dates";
            } | undefined;
            config?: {
                useHostSchedulesForTeamEvent?: boolean | undefined;
            } | undefined;
            bookerLayouts?: {
                enabledLayouts: import('../../prisma/zod-utils').BookerLayouts[];
                defaultLayout: import('../../prisma/zod-utils').BookerLayouts;
            } | null | undefined;
        } | null;
        id?: number | undefined;
        requiresConfirmation?: boolean | undefined;
        recurringEvent?: import('../../prisma-client').Prisma.JsonValue | undefined;
    };
}>;
//# sourceMappingURL=getBooking.d.ts.map