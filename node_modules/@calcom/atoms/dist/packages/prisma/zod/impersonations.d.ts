import * as z from "zod";
import { CompleteUser } from "./index";
export declare const _ImpersonationsModel: z.ZodObject<{
    id: z.ZodNumber;
    createdAt: z.ZodDate;
    impersonatedUserId: z.ZodNumber;
    impersonatedById: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    id: number;
    createdAt: Date;
    impersonatedUserId: number;
    impersonatedById: number;
}, {
    id: number;
    createdAt: Date;
    impersonatedUserId: number;
    impersonatedById: number;
}>;
export interface CompleteImpersonations extends z.infer<typeof _ImpersonationsModel> {
    impersonatedUser: CompleteUser;
    impersonatedBy: CompleteUser;
}
/**
 * ImpersonationsModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const ImpersonationsModel: z.ZodSchema<CompleteImpersonations>;
//# sourceMappingURL=impersonations.d.ts.map