import * as z from "zod";
import * as imports from "../zod-utils";
import { CompleteUserPassword, CompleteTravelSchedule, CompleteEventType, CompleteCredential, CompleteMembership, CompleteBooking, CompleteSchedule, CompleteSelectedCalendar, CompleteAvailability, CompleteWebhook, CompleteDestinationCalendar, CompleteImpersonations, CompleteApiKey, CompleteAccount, CompleteSession, CompleteFeedback, CompleteWorkflow, CompleteApp_RoutingForms_Form, CompleteVerifiedNumber, CompleteVerifiedEmail, CompleteHost, CompleteTeam, CompleteAccessCode, CompleteOutOfOfficeEntry, CompletePlatformOAuthClient, CompleteAccessToken, CompleteRefreshToken, CompletePlatformAuthorizationToken, CompleteProfile, CompleteSecondaryEmail, CompleteOutOfOfficeReason } from "./index";
export declare const _UserModel: z.ZodObject<{
    id: z.ZodNumber;
    username: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    name: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    email: z.ZodString;
    emailVerified: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    bio: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    avatar: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    avatarUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    timeZone: z.ZodString;
    weekStart: z.ZodString;
    startTime: z.ZodNumber;
    endTime: z.ZodNumber;
    bufferTime: z.ZodNumber;
    hideBranding: z.ZodBoolean;
    theme: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    appTheme: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdDate: z.ZodDate;
    trialEndsAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    defaultScheduleId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    completedOnboarding: z.ZodBoolean;
    locale: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    timeFormat: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    twoFactorSecret: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    twoFactorEnabled: z.ZodBoolean;
    backupCodes: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    identityProvider: z.ZodNativeEnum<{
        CAL: "CAL";
        GOOGLE: "GOOGLE";
        SAML: "SAML";
    }>;
    identityProviderId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    invitedTo: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    brandColor: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    darkBrandColor: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    away: z.ZodBoolean;
    allowDynamicBooking: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    allowSEOIndexing: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    receiveMonthlyDigestEmail: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    metadata: z.ZodNullable<z.ZodObject<{
        proPaidForByTeamId: z.ZodOptional<z.ZodNumber>;
        stripeCustomerId: z.ZodOptional<z.ZodString>;
        vitalSettings: z.ZodOptional<z.ZodObject<{
            connected: z.ZodOptional<z.ZodBoolean>;
            selectedParam: z.ZodOptional<z.ZodString>;
            sleepValue: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            connected?: boolean | undefined;
            selectedParam?: string | undefined;
            sleepValue?: number | undefined;
        }, {
            connected?: boolean | undefined;
            selectedParam?: string | undefined;
            sleepValue?: number | undefined;
        }>>;
        isPremium: z.ZodOptional<z.ZodBoolean>;
        sessionTimeout: z.ZodOptional<z.ZodNumber>;
        defaultConferencingApp: z.ZodOptional<z.ZodObject<{
            appSlug: z.ZodOptional<z.ZodDefault<z.ZodString>>;
            appLink: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            appSlug?: string | undefined;
            appLink?: string | undefined;
        }, {
            appSlug?: string | undefined;
            appLink?: string | undefined;
        }>>;
        defaultBookerLayouts: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            enabledLayouts: z.ZodArray<z.ZodUnion<[z.ZodLiteral<imports.BookerLayouts>, z.ZodLiteral<imports.BookerLayouts>, z.ZodLiteral<imports.BookerLayouts>]>, "many">;
            defaultLayout: z.ZodUnion<[z.ZodLiteral<imports.BookerLayouts>, z.ZodLiteral<imports.BookerLayouts>, z.ZodLiteral<imports.BookerLayouts>]>;
        }, "strip", z.ZodTypeAny, {
            enabledLayouts: imports.BookerLayouts[];
            defaultLayout: imports.BookerLayouts;
        }, {
            enabledLayouts: imports.BookerLayouts[];
            defaultLayout: imports.BookerLayouts;
        }>>>;
        emailChangeWaitingForVerification: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
        migratedToOrgFrom: z.ZodOptional<z.ZodObject<{
            username: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNull]>>;
            lastMigrationTime: z.ZodOptional<z.ZodString>;
            reverted: z.ZodOptional<z.ZodBoolean>;
            revertTime: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            username?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            revertTime?: string | undefined;
        }, {
            username?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            revertTime?: string | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        proPaidForByTeamId?: number | undefined;
        stripeCustomerId?: string | undefined;
        vitalSettings?: {
            connected?: boolean | undefined;
            selectedParam?: string | undefined;
            sleepValue?: number | undefined;
        } | undefined;
        isPremium?: boolean | undefined;
        sessionTimeout?: number | undefined;
        defaultConferencingApp?: {
            appSlug?: string | undefined;
            appLink?: string | undefined;
        } | undefined;
        defaultBookerLayouts?: {
            enabledLayouts: imports.BookerLayouts[];
            defaultLayout: imports.BookerLayouts;
        } | null | undefined;
        emailChangeWaitingForVerification?: string | undefined;
        migratedToOrgFrom?: {
            username?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            revertTime?: string | undefined;
        } | undefined;
    }, {
        proPaidForByTeamId?: number | undefined;
        stripeCustomerId?: string | undefined;
        vitalSettings?: {
            connected?: boolean | undefined;
            selectedParam?: string | undefined;
            sleepValue?: number | undefined;
        } | undefined;
        isPremium?: boolean | undefined;
        sessionTimeout?: number | undefined;
        defaultConferencingApp?: {
            appSlug?: string | undefined;
            appLink?: string | undefined;
        } | undefined;
        defaultBookerLayouts?: {
            enabledLayouts: imports.BookerLayouts[];
            defaultLayout: imports.BookerLayouts;
        } | null | undefined;
        emailChangeWaitingForVerification?: string | undefined;
        migratedToOrgFrom?: {
            username?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            revertTime?: string | undefined;
        } | undefined;
    }>>;
    verified: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    role: z.ZodNativeEnum<{
        USER: "USER";
        ADMIN: "ADMIN";
    }>;
    disableImpersonation: z.ZodBoolean;
    organizationId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    locked: z.ZodBoolean;
    movedToProfileId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    isPlatformManaged: z.ZodBoolean;
    smsLockState: z.ZodNativeEnum<{
        LOCKED: "LOCKED";
        UNLOCKED: "UNLOCKED";
        REVIEW_NEEDED: "REVIEW_NEEDED";
    }>;
}, "strip", z.ZodTypeAny, {
    email: string;
    role: "USER" | "ADMIN";
    locked: boolean;
    id: number;
    weekStart: string;
    timeZone: string;
    startTime: number;
    endTime: number;
    metadata: {
        proPaidForByTeamId?: number | undefined;
        stripeCustomerId?: string | undefined;
        vitalSettings?: {
            connected?: boolean | undefined;
            selectedParam?: string | undefined;
            sleepValue?: number | undefined;
        } | undefined;
        isPremium?: boolean | undefined;
        sessionTimeout?: number | undefined;
        defaultConferencingApp?: {
            appSlug?: string | undefined;
            appLink?: string | undefined;
        } | undefined;
        defaultBookerLayouts?: {
            enabledLayouts: imports.BookerLayouts[];
            defaultLayout: imports.BookerLayouts;
        } | null | undefined;
        emailChangeWaitingForVerification?: string | undefined;
        migratedToOrgFrom?: {
            username?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            revertTime?: string | undefined;
        } | undefined;
    } | null;
    bufferTime: number;
    hideBranding: boolean;
    createdDate: Date;
    completedOnboarding: boolean;
    twoFactorEnabled: boolean;
    identityProvider: "SAML" | "CAL" | "GOOGLE";
    away: boolean;
    disableImpersonation: boolean;
    isPlatformManaged: boolean;
    smsLockState: "LOCKED" | "UNLOCKED" | "REVIEW_NEEDED";
    username?: string | null | undefined;
    name?: string | null | undefined;
    emailVerified?: Date | null | undefined;
    bio?: string | null | undefined;
    avatar?: string | null | undefined;
    avatarUrl?: string | null | undefined;
    theme?: string | null | undefined;
    appTheme?: string | null | undefined;
    trialEndsAt?: Date | null | undefined;
    defaultScheduleId?: number | null | undefined;
    locale?: string | null | undefined;
    timeFormat?: number | null | undefined;
    twoFactorSecret?: string | null | undefined;
    backupCodes?: string | null | undefined;
    identityProviderId?: string | null | undefined;
    invitedTo?: number | null | undefined;
    brandColor?: string | null | undefined;
    darkBrandColor?: string | null | undefined;
    allowDynamicBooking?: boolean | null | undefined;
    allowSEOIndexing?: boolean | null | undefined;
    receiveMonthlyDigestEmail?: boolean | null | undefined;
    verified?: boolean | null | undefined;
    organizationId?: number | null | undefined;
    movedToProfileId?: number | null | undefined;
}, {
    email: string;
    role: "USER" | "ADMIN";
    locked: boolean;
    id: number;
    weekStart: string;
    timeZone: string;
    startTime: number;
    endTime: number;
    metadata: {
        proPaidForByTeamId?: number | undefined;
        stripeCustomerId?: string | undefined;
        vitalSettings?: {
            connected?: boolean | undefined;
            selectedParam?: string | undefined;
            sleepValue?: number | undefined;
        } | undefined;
        isPremium?: boolean | undefined;
        sessionTimeout?: number | undefined;
        defaultConferencingApp?: {
            appSlug?: string | undefined;
            appLink?: string | undefined;
        } | undefined;
        defaultBookerLayouts?: {
            enabledLayouts: imports.BookerLayouts[];
            defaultLayout: imports.BookerLayouts;
        } | null | undefined;
        emailChangeWaitingForVerification?: string | undefined;
        migratedToOrgFrom?: {
            username?: string | null | undefined;
            lastMigrationTime?: string | undefined;
            reverted?: boolean | undefined;
            revertTime?: string | undefined;
        } | undefined;
    } | null;
    bufferTime: number;
    hideBranding: boolean;
    createdDate: Date;
    completedOnboarding: boolean;
    twoFactorEnabled: boolean;
    identityProvider: "SAML" | "CAL" | "GOOGLE";
    away: boolean;
    disableImpersonation: boolean;
    isPlatformManaged: boolean;
    smsLockState: "LOCKED" | "UNLOCKED" | "REVIEW_NEEDED";
    username?: string | null | undefined;
    name?: string | null | undefined;
    emailVerified?: Date | null | undefined;
    bio?: string | null | undefined;
    avatar?: string | null | undefined;
    avatarUrl?: string | null | undefined;
    theme?: string | null | undefined;
    appTheme?: string | null | undefined;
    trialEndsAt?: Date | null | undefined;
    defaultScheduleId?: number | null | undefined;
    locale?: string | null | undefined;
    timeFormat?: number | null | undefined;
    twoFactorSecret?: string | null | undefined;
    backupCodes?: string | null | undefined;
    identityProviderId?: string | null | undefined;
    invitedTo?: number | null | undefined;
    brandColor?: string | null | undefined;
    darkBrandColor?: string | null | undefined;
    allowDynamicBooking?: boolean | null | undefined;
    allowSEOIndexing?: boolean | null | undefined;
    receiveMonthlyDigestEmail?: boolean | null | undefined;
    verified?: boolean | null | undefined;
    organizationId?: number | null | undefined;
    movedToProfileId?: number | null | undefined;
}>;
export interface CompleteUser extends z.infer<typeof _UserModel> {
    password?: CompleteUserPassword | null;
    travelSchedules: CompleteTravelSchedule[];
    eventTypes: CompleteEventType[];
    credentials: CompleteCredential[];
    teams: CompleteMembership[];
    bookings: CompleteBooking[];
    schedules: CompleteSchedule[];
    selectedCalendars: CompleteSelectedCalendar[];
    availability: CompleteAvailability[];
    webhooks: CompleteWebhook[];
    destinationCalendar?: CompleteDestinationCalendar | null;
    impersonatedUsers: CompleteImpersonations[];
    impersonatedBy: CompleteImpersonations[];
    apiKeys: CompleteApiKey[];
    accounts: CompleteAccount[];
    sessions: CompleteSession[];
    Feedback: CompleteFeedback[];
    ownedEventTypes: CompleteEventType[];
    workflows: CompleteWorkflow[];
    routingForms: CompleteApp_RoutingForms_Form[];
    verifiedNumbers: CompleteVerifiedNumber[];
    verifiedEmails: CompleteVerifiedEmail[];
    hosts: CompleteHost[];
    organization?: CompleteTeam | null;
    accessCodes: CompleteAccessCode[];
    bookingRedirects: CompleteOutOfOfficeEntry[];
    bookingRedirectsTo: CompleteOutOfOfficeEntry[];
    platformOAuthClients: CompletePlatformOAuthClient[];
    AccessToken: CompleteAccessToken[];
    RefreshToken: CompleteRefreshToken[];
    PlatformAuthorizationToken: CompletePlatformAuthorizationToken[];
    profiles: CompleteProfile[];
    movedToProfile?: CompleteProfile | null;
    secondaryEmails: CompleteSecondaryEmail[];
    OutOfOfficeReasons: CompleteOutOfOfficeReason[];
}
/**
 * UserModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const UserModel: z.ZodSchema<CompleteUser>;
//# sourceMappingURL=user.d.ts.map