import * as z from "zod";
import { CompleteTeam, CompleteDSyncData } from "./index";
export declare const _DSyncTeamGroupMappingModel: z.ZodObject<{
    id: z.ZodNumber;
    organizationId: z.ZodNumber;
    teamId: z.ZodNumber;
    directoryId: z.ZodString;
    groupName: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: number;
    teamId: number;
    organizationId: number;
    directoryId: string;
    groupName: string;
}, {
    id: number;
    teamId: number;
    organizationId: number;
    directoryId: string;
    groupName: string;
}>;
export interface CompleteDSyncTeamGroupMapping extends z.infer<typeof _DSyncTeamGroupMappingModel> {
    team: CompleteTeam;
    directory: CompleteDSyncData;
}
/**
 * DSyncTeamGroupMappingModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const DSyncTeamGroupMappingModel: z.ZodSchema<CompleteDSyncTeamGroupMapping>;
//# sourceMappingURL=dsyncteamgroupmapping.d.ts.map