import * as z from "zod";
import { CompleteWorkflow, CompleteEventType } from "./index";
export declare const _WorkflowsOnEventTypesModel: z.ZodObject<{
    id: z.ZodNumber;
    workflowId: z.ZodNumber;
    eventTypeId: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    id: number;
    eventTypeId: number;
    workflowId: number;
}, {
    id: number;
    eventTypeId: number;
    workflowId: number;
}>;
export interface CompleteWorkflowsOnEventTypes extends z.infer<typeof _WorkflowsOnEventTypesModel> {
    workflow: CompleteWorkflow;
    eventType: CompleteEventType;
}
/**
 * WorkflowsOnEventTypesModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export declare const WorkflowsOnEventTypesModel: z.ZodSchema<CompleteWorkflowsOnEventTypes>;
//# sourceMappingURL=workflowsoneventtypes.d.ts.map