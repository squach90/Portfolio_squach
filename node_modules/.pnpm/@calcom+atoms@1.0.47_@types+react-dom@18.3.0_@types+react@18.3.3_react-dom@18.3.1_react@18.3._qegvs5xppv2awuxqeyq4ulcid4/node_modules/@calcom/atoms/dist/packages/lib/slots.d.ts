import type { IOutOfOfficeData } from "@calcom/core/getUserAvailability";
import type { Dayjs } from '../dayjs';
import type { WorkingHours, TimeRange as DateOverride } from "@calcom/types/schedule";
import type { DateRange } from "./date-ranges";
export type GetSlots = {
    inviteeDate: Dayjs;
    frequency: number;
    workingHours?: WorkingHours[];
    dateOverrides?: DateOverride[];
    dateRanges?: DateRange[];
    minimumBookingNotice: number;
    eventLength: number;
    offsetStart?: number;
    organizerTimeZone: string;
    datesOutOfOffice?: IOutOfOfficeData;
};
export type TimeFrame = {
    userIds?: number[];
    startTime: number;
    endTime: number;
};
declare const getSlots: ({ inviteeDate, frequency, minimumBookingNotice, workingHours, dateOverrides, dateRanges, eventLength, offsetStart, organizerTimeZone, datesOutOfOffice, }: GetSlots) => {
    time: Dayjs;
    userIds?: number[] | undefined;
}[];
export default getSlots;
//# sourceMappingURL=slots.d.ts.map